[{"path":"/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2023 F. Last Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Gregory Faletto. Author, maintainer. Jacob Bien. Author.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Faletto G, Bien J (2023). cssr: Cluster Stability Selection. R package version 0.1.2.","code":"@Manual{,   title = {cssr: Cluster Stability Selection},   author = {Gregory Faletto and Jacob Bien},   year = {2023},   note = {R package version 0.1.2}, }"},{"path":"/index.html","id":"cluster-stability-selection","dir":"","previous_headings":"","what":"Cluster Stability Selection","title":"Cluster Stability Selection","text":"cssr package implements cluster stability selection (Faletto Bien 2022), feature selection method designed allow stability selection work effectively presence highly correlated features.","code":""},{"path":"/index.html","id":"installing-the-cssr-package","dir":"","previous_headings":"","what":"Installing the cssr Package","title":"Cluster Stability Selection","text":"can install cssr package using following command:","code":"remotes::install_github(\"gregfaletto/cssr-project\", subdir = \"cssr\")"},{"path":"/index.html","id":"an-introduction-to-the-package","dir":"","previous_headings":"","what":"An Introduction to the Package","title":"Cluster Stability Selection","text":"Given data (X,y), cluster stability selection selects variables X useful predicting y. ’ll first walk description stability selection (Meinshausen Bühlmann, 2010), method cluster stability selection builds . ’ll illustrate problem stability selection data clusters highly correlated features observed. problem motivates cluster stability selection. Finally, ’ll demonstrate use cssr package implement cluster stability selection. cssr package written 3400 tests ensuring functions exactly way intended wrote paper.","code":"library(cssr) # Set seed for reproducibility set.seed(983219) # Generate some data containing clusters of highly correlated features data <- genClusteredData(n = 80, # Sample size                          p = 40, # Number of features                           cluster_size = 10, # Number of features in a cluster correlated with a latent variable                          k_unclustered = 10, # Number of unclustered features that influence y                          snr = 3 # Signal-to-noise ratio in the response y generated from the data.                          )  X <- data$X y <- data$y  output <- cssSelect(X, y)  output$selected_feats"},{"path":"/index.html","id":"stability-selection","dir":"","previous_headings":"","what":"Stability Selection","title":"Cluster Stability Selection","text":"Cluster stability selection extension stability selection (Meinshausen Bühlmann, 2010). Stability selection procedure deisgned make feature selection procedure stable. Given data set (X,y) n observations, stability selection works follows: data divided B subsamples size n/2 (typically, B might around 50 100). desired feature selection method run subsample, yielding B selected sets features. feature, count many times selected divide B get selection proportion. interpret selection proportion feature measure feature importance–higher selection proportion feature, relevant think predicting y. Finally, use selection proportions get selected set (example, taking top s features predetermined s). diagram (Faletto Bien 2022) demonstrates procedure. diagram, lasso chosen feature selection procedure, selected set chosen choosing features selection proportions larger predetermined τ. Stability Selection Flowchart Figure classic framework bias/variance tradeoff, can think stability selection way reduce variance price increasing bias. get stable robust (lower variance) feature selection procedure average many subsamples. price pay selected set estimated using sample size n/2 rather n.","code":""},{"path":"/index.html","id":"why-cluster-stability-selection","dir":"","previous_headings":"","what":"Why Cluster Stability Selection?","title":"Cluster Stability Selection","text":"Stability selection doesn’t well features highly correlated. problem clusters highly correlated features, one member cluster might reasonably good choice predictive model. base feature selection might select one cluster member less random. end, one cluster member high selection proportion, cluster member selected important feature, even every selected set contained cluster member. problem called “vote-splitting.” paper, walk example latent (unobserved) feature Z important predicting y. Z observed, 10 proxies Z observed–features highly correlated Z (therefore , ). also 10 “weak signal” features influence y, less Z. show simulation study stability selection tends end low selection proportions proxies Z, even though one Z proxies useful predicting y “weak signal” features. figure shows selection proportions yielded stability selection proxies Z, “weak signal” features, “noise” features unrelated y. Selection Proportions","code":""},{"path":"/index.html","id":"how-does-cluster-stability-selection-fix-this","dir":"","previous_headings":"","what":"How does cluster stability selection fix this?","title":"Cluster Stability Selection","text":"Cluster stability selection modifies stability selection simple fix: instead keeping track individual feature selection proportions, also keep track cluster selection proportions–proportion subsamples least one cluster member selected. can rank clusters importance according cluster selection proportion, select entire clusters. avoids vote-splitting problem!","code":""},{"path":"/index.html","id":"getting-started-with-selecting-features-by-cluster-stability-selection-using-the-cssselect-function","dir":"","previous_headings":"","what":"Getting started with selecting features by cluster stability selection using the cssSelect function","title":"Cluster Stability Selection","text":"data generated beginning third document contain cluster 10 features (specifically, first 10 columns X) highly correlated also unobserved variable Z associated y. cssSelect function cssr package yields set features selected cluster stability selection. can tell cssSelect cluster using “clusters” argument. input tells cssSelect features 1 10 cluster, names cluster “Z_cluster” (providing name optional convenience). cssSelect returns set selected clusters () features contained within clusters (). default, cssSelect decides many clusters select . However, can set using max_num_clusts argument. can also select clusters selection proportion certain threshold, rather selecting pre-specified number clusters. cssSelect uses lasso (implemented R glmnet package) base feature selection procedure. lasso requires tuning parameter λ. cssSelect choose λ automatically default, can also provide λ value ’d like. (Remember λ chosen subsamples size n/2.)","code":"clus_output <- cssSelect(X, y, clusters=list(\"Z_cluster\"=1:10)) clus_output$selected_clusts  clus_output$selected_feats clus_output_three <- cssSelect(X, y, clusters=list(\"Z_cluster\"=1:10),   max_num_clusts=3)    clus_output_three$selected_clusts clus_output_3 <- cssSelect(X, y, clusters=list(\"Z_cluster\"=1:10),   cutoff=0.3)    clus_output_3$selected_clusts clus_output_lam <- cssSelect(X, y, clusters=list(\"Z_cluster\"=1:10),   lambda=0.01, cutoff=0.3)"},{"path":"/index.html","id":"getting-more-advanced-the-css-function","dir":"","previous_headings":"","what":"Getting more advanced: the css function","title":"Cluster Stability Selection","text":"Cluster stability selection computationally intensive involves running feature selection algorithm B times. , going use one data set play around results (example, trying different model sizes cutoffs), efficient feature selection step use results however want. function css isolates computationally intensive set provides convenient output can easily used functions package. css function flexible demanding cssSelect. particular, css requires specify lambda. ’re sure want choose lambda, provide function getLassoLambda . css function outputs object class cssr, list containing following elements: feat_sel_mat: 2 ⋅ B × p matrix feature selection indicators. (feat_sel_mat[, j] equals 1 feature j selected set 0 otherwise.) feat_sel_mat used calculate feature selection proportions. clus_sel_mat: Like feat_sel_mat, except number columns equal number clusters, contains indicators whether cluster selected subsample. clus_sel_mat used calculate cluster selection proportions. X (originally provided X returned) y (originally provided y returned) clusters (list clusters returned; features specified cluster function input put “cluster” size 1, unnamed clusters automatically get names). train_inds (don’t worry now) css options cssSelect. options: can select number subsamples use B. Larger values B may bit robust, require computation time. (Also, diminishing returns past certain point, since n data points work matter large B gets.) default B 50, leading 100 subsamples. can specify feature selection function, fitfun. must function accepts arguments X, y, lambda (lambda argument can ignored like) must return integer vector (containing indices features selected using data). requirements, function can whatever want! ’s one example valid (silly) fitfun ignores lambda chooses p/2 features random: ’s another requires lambda integer takes top lambda features highest absolute correlations y. (Lambda can anything want mean whatever want, ’s !)","code":"lambda <- getLassoLambda(X, y) # Notice that the below function call takes kind of a long time. (cssSelect has to call css internally every time it is used.) css_output <- css(X, y, lambda, clusters=list(\"Z_cluster\"=1:10))  str(css_output) testFitfun <- function(X, y, lambda){     p <- ncol(X)     # Choose p/2 features randomly     selected <- sample.int(p, size=floor(p/2))     return(selected)   }    css_output_test <- css(X, y, lambda, clusters=list(\"Z_cluster\"=1:10),   fitfun=testFitfun, B=10)  str(css_output_test) corFitfun <- function(X, y, lambda){     cors <- as.vector(abs(cor(X, y)))     names(cors) <- 1:ncol(X)     cors <- sort(cors, decreasing=TRUE)     selected <- as.integer(names(cors[1:lambda]))     return(selected)   }    css_output_cor <- css(X, y, lambda=8, clusters=list(\"Z_cluster\"=1:10),   fitfun=testFitfun, B=10)  str(css_output_cor)"},{"path":"/index.html","id":"getting-selected-feature-sets-using-getcssselections","dir":"","previous_headings":"","what":"Getting selected feature sets using getCssSelections","title":"Cluster Stability Selection","text":"function getCssSelections gets sets selected features output css. (function much faster call cssSelect since relies already-generated output css.) can choose selected set according criteria can provide function inputs: Set cutoff select features whose selection proportions least large cutoff. Set min_num_clusts ensure least min_num_clusts features returned (regardless cutoff) Set max_num_clusts ensure max_num_clusts returned (regardless cutoff, fulfilling min_num_clusts max_num_clusts time impossible, max_num_clusts gets priority). vignette incomplete past point… ’s brief summary cluster stability selection works: besides data (X,y), cluster stability selection also requires “base” feature selection method, can also accept tuning parameter method. (default feature selection method lasso, tuning parameter lambda.) Cluster stability selection takes large number B subsamples size n/2 runs feature selection method subsample, yielding B selected sets.","code":"sels <- getCssSelections(css_output, max_num_clusts=5)  sels getCssSelections(css_output, cutoff=0.7)  getCssSelections(css_output, cutoff=0.99, min_num_clusts=12)  getCssSelections(css_output, cutoff=0.5, min_num_clusts=3, max_num_clusts=7) clusters <- list(\"Z_clust\"=1:10, 36:40)  # Wrapper functions (easy!) n_test <- 50 n <- 80 p <- 40 testx <- matrix(rnorm(n_test*p), nrow=n_test, ncol=p)  cssPredict(X, y, testx, clusters)  # Get a good lambda lambda <- getLassoLambda(X, y)  # clusters <- list(1:10, 46:40) # clusters <- 1:10  inds <- 1:40  results <- css(X=X, y=y, lambda=lambda                , clusters=clusters                # , clusters=list()                # , clusters=1:10                # , sampling.type = \"SS\"                # B = 100,                # , prop_feats_remove = .5                , train_inds = inds )  str(results)  predictions <- results |> getCssPreds(testX = testx, weighting=\"sparse\",                                       cutoff=0.3                                       , min_num_clusts=1                                       , max_num_clusts=3 ) predictions  train_x <- matrix(rnorm(n_test*p), nrow=n_test, ncol=p) train_y <- rnorm(n_test)  preds2 <- results |> getCssPreds(testX = testx, weighting=\"sparse\",                                  cutoff=0.3, min_num_clusts=1, max_num_clusts=3,                                  trainX=train_x                                  , trainY=train_y)  preds2  selections <- results |> getCssSelections(weighting=\"sparse\", cutoff=0.3                                           # , min_num_clusts=1                                           # , max_num_clusts=3 )  str(selections)  selections$selected_clusts selections$selected_feats  print(results, cutoff=0.3, max_num_clusts=5)  x_design <- results |> getCssDesign(testx, weighting=\"weighted_avg\", cutoff=0.3,   min_num_clusts=1, max_num_clusts=3)  str(x_design)"},{"path":"/reference/checkB.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper function to confirm that the argument B to several functions is as\nexpected — checkB","title":"Helper function to confirm that the argument B to several functions is as\nexpected — checkB","text":"Helper function confirm argument B several functions expected","code":""},{"path":"/reference/checkB.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper function to confirm that the argument B to several functions is as\nexpected — checkB","text":"","code":"checkB(B)"},{"path":"/reference/checkB.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper function to confirm that the argument B to several functions is as\nexpected — checkB","text":"B Integer numeric; number subsamples. Note: sampling.type==\"MB\" total number subsamples B; sampling_type=\"SS\" number subsamples 2*B.","code":""},{"path":"/reference/checkB.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Helper function to confirm that the argument B to several functions is as\nexpected — checkB","text":"Gregory Faletto, Jacob Bien","code":""},{"path":"/reference/checkClusters.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper function to confirm that the argument clusters to several functions is\nas expected — checkClusters","title":"Helper function to confirm that the argument clusters to several functions is\nas expected — checkClusters","text":"Helper function confirm argument clusters several functions expected","code":""},{"path":"/reference/checkClusters.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper function to confirm that the argument clusters to several functions is\nas expected — checkClusters","text":"","code":"checkClusters(clusters, p)"},{"path":"/reference/checkClusters.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper function to confirm that the argument clusters to several functions is\nas expected — checkClusters","text":"clusters named list entry integer vector indices features common cluster, output css formatClusters. (length list clusters equal number clusters.) identified clusters must non-overlapping, features must appear exactly one cluster (unclustered features \"cluster\" size 1). p number features; must least large number clusters.","code":""},{"path":"/reference/checkClusters.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Helper function to confirm that the argument clusters to several functions is\nas expected — checkClusters","text":"Gregory Faletto, Jacob Bien","code":""},{"path":"/reference/checkCssClustersInput.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper function to confirm that clusters input to css is as expected — checkCssClustersInput","title":"Helper function to confirm that clusters input to css is as expected — checkCssClustersInput","text":"Helper function confirm clusters input css expected","code":""},{"path":"/reference/checkCssClustersInput.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper function to confirm that clusters input to css is as expected — checkCssClustersInput","text":"","code":"checkCssClustersInput(clusters)"},{"path":"/reference/checkCssClustersInput.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper function to confirm that clusters input to css is as expected — checkCssClustersInput","text":"clusters list integer vectors; vector contain indices cluster features (subset 1:p). (one cluster, clusters can either list length 1 integer vector.) provided clusters must non-overlapping. Every feature appearing cluster assumed unclustered (, treated \"cluster\" containing ). clusters list length 0 (list containing clusters length 1), css() returns results stability selection (returned feat_sel_mat identical clus_sel_mat). Names clusters needed later; clusters given names provided list given names automatically css(). #' CAUTION: provided X data.frame contains categorical feature two levels, resulting matrix made model.matrix different number columns provided data.frame, feature numbers change, clusters argument work properly (current version package). get correct results case, please use model.matrix convert data.frame numeric matrix , provide matrix cluster assignments respect matrix. Default list() (clusters specified).","code":""},{"path":"/reference/checkCssClustersInput.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Helper function to confirm that clusters input to css is as expected — checkCssClustersInput","text":"input, clusters coerced integers.","code":""},{"path":"/reference/checkCssClustersInput.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Helper function to confirm that clusters input to css is as expected — checkCssClustersInput","text":"Gregory Faletto, Jacob Bien","code":""},{"path":"/reference/checkCssInputs.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper function to confirm that inputs to the function css() are as expected,\nand modify inputs if needed — checkCssInputs","title":"Helper function to confirm that inputs to the function css() are as expected,\nand modify inputs if needed — checkCssInputs","text":"Helper function confirm inputs function css() expected, modify inputs needed","code":""},{"path":"/reference/checkCssInputs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper function to confirm that inputs to the function css() are as expected,\nand modify inputs if needed — checkCssInputs","text":"","code":"checkCssInputs(   X,   y,   lambda,   clusters,   fitfun,   sampling_type,   B,   prop_feats_remove,   train_inds,   num_cores )"},{"path":"/reference/checkCssInputs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper function to confirm that inputs to the function css() are as expected,\nand modify inputs if needed — checkCssInputs","text":"X n x p numeric matrix (preferably) data.frame (coerced internally matrix function model.matrix) containing p >= 2 features/predictors. y response; can anything takes form n-dimensional vector, ith entry corresponding ith row X. Typically (default fitfun = cssLasso), y n-dimensional numeric vector. lambda tuning parameter set tuning parameters may used feature selection method fitfun. default case fitfun = cssLasso, lambda numeric: penalty use lasso fit. (css() require lambda particular object user-specified feature selection method fitfun, lambda can arbitrary object. See description fitfun .) clusters list integer vectors; vector contain indices cluster features (subset 1:p). (one cluster, clusters can either list length 1 integer vector.) provided clusters must non-overlapping. Every feature appearing cluster assumed unclustered (, treated \"cluster\" containing ). clusters list length 0 (list containing clusters length 1), css() returns results stability selection (returned feat_sel_mat identical clus_sel_mat). Names clusters needed later; clusters given names provided list given names automatically css(). #' CAUTION: provided X data.frame contains categorical feature two levels, resulting matrix made model.matrix different number columns provided data.frame, feature numbers change, clusters argument work properly (current version package). get correct results case, please use model.matrix convert data.frame numeric matrix , provide matrix cluster assignments respect matrix. Default list() (clusters specified). fitfun function; feature selection function used subsample cluster stability selection. can feature selection method; requirement accepts arguments (arguments) X, y, lambda returns integer vector subset 1:p. example, fitfun best subset selection forward stepwise selection LARS lambda desired model size; fitfun elastic net lambda length-two vector specifying lambda alpha. Default cssLasso, implementation lasso (relying R package glmnet), lambda must positive numeric specifying L1 penalty lasso. sampling_type character vector; either \"SS\" \"MB\". \"MB\", B subsamples drawn randomly (proposed Meinshausen Bühlmann 2010). \"SS\", addition B subsamples, B complementary pair subsamples drawn well (see Faletto Bien 2022 Shah Samworth 2013 details). Default \"SS\", \"MB\" supported yet. B Integer numeric; number subsamples. Note: sampling.type==\"MB\" total number subsamples B; sampling_type=\"SS\" number subsamples 2*B. Default 100 sampling_type=\"MB\" 50 sampling_type=\"SS\". prop_feats_remove Numeric; prop_feats_remove greater 0, subsample, feature randomly dropped design matrix provided fitfun probability prop_feats_remove (independently across features). , typical subsample, prop_feats_remove*p features dropped (though number vary). similar spirit (distinct ) extended stability selection (Beinrucker et. al. 2016); see paper benefits dropping features (besides increasing computational speed decreasing memory requirements). sampling_type=\"SS\", features dropped complementary pair subsamples identical order ensure theoretical guarantees Faletto Bien (2022) retained within individual pair subsamples. (Note feature investigated either theoretically simulations Faletto Bien 2022). Must 0 1. Default 0. train_inds Optional; integer numeric vector containing indices observations X y set aside model training function getCssPreds feature selection. (work y real-valued, getCssPreds using ordinary least squares regression generate predictions.) train_inds provided, observations provided data set used feature selection. num_cores Optional; integer. using parallel processing, number cores use parallel processing (num_cores supplied internally mc.cores argument parallel::mclapply).","code":""},{"path":"/reference/checkCssInputs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Helper function to confirm that inputs to the function css() are as expected,\nand modify inputs if needed — checkCssInputs","text":"named list following elements: feat_names character vector containing column names X (provided X column names). provided X column names, feat_names NA. X provided X, converted matrix originally provided data.frame, feature names removed provided. clusters list integer vectors; vector contain indices cluster features. duplicated clusters provided input removed.","code":""},{"path":"/reference/checkCssInputs.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Helper function to confirm that inputs to the function css() are as expected,\nand modify inputs if needed — checkCssInputs","text":"Gregory Faletto, Jacob Bien","code":""},{"path":"/reference/checkCssLassoInputs.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper function to confirm that the inputs to cssLasso() are as expected. — checkCssLassoInputs","title":"Helper function to confirm that the inputs to cssLasso() are as expected. — checkCssLassoInputs","text":"Helper function confirm inputs cssLasso() expected.","code":""},{"path":"/reference/checkCssLassoInputs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper function to confirm that the inputs to cssLasso() are as expected. — checkCssLassoInputs","text":"","code":"checkCssLassoInputs(X, y, lambda)"},{"path":"/reference/checkCssLassoInputs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper function to confirm that the inputs to cssLasso() are as expected. — checkCssLassoInputs","text":"X design matrix containing predictors. (Note need check X much, X already checked function checkCssInputs() provided css().) y numeric vector containing response. lambda Numeric; nonnegative number lasso penalty use subsample. (now, one lambda value can provided cssLasso(); future, plan allow multiple lambda values provided cssLasso(), described Faletto Bien 2022.)","code":""},{"path":"/reference/checkCssLassoInputs.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Helper function to confirm that the inputs to cssLasso() are as expected. — checkCssLassoInputs","text":"Gregory Faletto, Jacob Bien","code":""},{"path":"/reference/checkCssLoopOutput.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper function to confirm that the outputs of the provided feature selection\nmethod are as required. — checkCssLoopOutput","title":"Helper function to confirm that the outputs of the provided feature selection\nmethod are as required. — checkCssLoopOutput","text":"Helper function confirm outputs provided feature selection method required.","code":""},{"path":"/reference/checkCssLoopOutput.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper function to confirm that the outputs of the provided feature selection\nmethod are as required. — checkCssLoopOutput","text":"","code":"checkCssLoopOutput(selected, p, feats_on_subsamp)"},{"path":"/reference/checkCssLoopOutput.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper function to confirm that the outputs of the provided feature selection\nmethod are as required. — checkCssLoopOutput","text":"selected integer vector; indices features selected lasso. p total number observed features; selected features must 1:p. feats_on_subsamp Integer; indices features considered feature selection method. selected features must among features.","code":""},{"path":"/reference/checkCssLoopOutput.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Helper function to confirm that the outputs of the provided feature selection\nmethod are as required. — checkCssLoopOutput","text":"Gregory Faletto, Jacob Bien","code":""},{"path":"/reference/checkCutoff.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper function to confirm that the argument cutoff to several functions is\nas expected — checkCutoff","title":"Helper function to confirm that the argument cutoff to several functions is\nas expected — checkCutoff","text":"Helper function confirm argument cutoff several functions expected","code":""},{"path":"/reference/checkCutoff.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper function to confirm that the argument cutoff to several functions is\nas expected — checkCutoff","text":"","code":"checkCutoff(cutoff)"},{"path":"/reference/checkCutoff.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper function to confirm that the argument cutoff to several functions is\nas expected — checkCutoff","text":"cutoff Numeric; clusters selection proportions equal least cutoff selected cluster stability selection. Must 0 1.","code":""},{"path":"/reference/checkCutoff.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Helper function to confirm that the argument cutoff to several functions is\nas expected — checkCutoff","text":"Gregory Faletto, Jacob Bien","code":""},{"path":"/reference/checkFormCssDesignInputs.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper function to check that the inputs to formCssDesign are as expected — checkFormCssDesignInputs","title":"Helper function to check that the inputs to formCssDesign are as expected — checkFormCssDesignInputs","text":"Helper function check inputs formCssDesign expected","code":""},{"path":"/reference/checkFormCssDesignInputs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper function to check that the inputs to formCssDesign are as expected — checkFormCssDesignInputs","text":"","code":"checkFormCssDesignInputs(   css_results,   weighting,   cutoff,   min_num_clusts,   max_num_clusts,   newx )"},{"path":"/reference/checkFormCssDesignInputs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper function to check that the inputs to formCssDesign are as expected — checkFormCssDesignInputs","text":"css_results object class \"cssr\" (output function css). weighting Character; determines calculate weights combine features selected clusters weighted averages, called cluster representatives. Must one \"sparse\", \"weighted_avg\", \"simple_avg'. cutoff Numeric; css return clusters selection proportions equal least cutoff. Must 0 1. min_num_clusts Integer numeric; minimum number clusters use regardless cutoff. (, chosen cutoff returns fewer min_num_clusts clusters, cutoff increased least min_num_clusts clusters selected.) max_num_clusts Integer numeric; maximum number clusters use regardless cutoff. (, chosen cutoff returns max_num_clusts clusters, cutoff decreased max_num_clusts clusters selected.) newx numeric matrix (preferably) data.frame (coerced internally matrix function model.matrix) containing data used generate design matrix cluster representatives. Must contain features (number columns) X matrix provided css, columns newx labeled, names must match variable names provided css. newx may omitted train_inds provided css set aside observations model estimation. case, newx omitted formCssDesign return design matrix cluster representatives formed train_inds observations matrix X provided css. (train_inds provided css, newX must provided formCssDesign.)","code":""},{"path":"/reference/checkFormCssDesignInputs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Helper function to check that the inputs to formCssDesign are as expected — checkFormCssDesignInputs","text":"named list following elements: newx newx provided, provided newx matrix, coerced data.frame matrix needed. newx provided, matrix formed train_inds set aside original function call css. max_num_clusts provided max_num_clusts, coerced integer needed, coerced less equal total number clusters.","code":""},{"path":"/reference/checkFormCssDesignInputs.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Helper function to check that the inputs to formCssDesign are as expected — checkFormCssDesignInputs","text":"Gregory Faletto, Jacob Bien","code":""},{"path":"/reference/checkFormatClustersInput.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper function to ensure that the inputs to formatClusters are as expected — checkFormatClustersInput","title":"Helper function to ensure that the inputs to formatClusters are as expected — checkFormatClustersInput","text":"Helper function ensure inputs formatClusters expected","code":""},{"path":"/reference/checkFormatClustersInput.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper function to ensure that the inputs to formatClusters are as expected — checkFormatClustersInput","text":"","code":"checkFormatClustersInput(clusters, p, clust_names, get_prototypes, x, y, R)"},{"path":"/reference/checkFormatClustersInput.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper function to ensure that the inputs to formatClusters are as expected — checkFormatClustersInput","text":"clusters Either integer vector list integer vectors; vector contain indices cluster features. (one cluster, clusters can either list length 1 simply integer vector.) clusters specified R ignored. p integer numeric; numbe features x (match ncol(x), x provided) clust_names character vector names clusters clusters. get_prototypes Logical: TRUE, identify prototype cluster (feature cluster correlated response) protolasso. case, x y must provided. x n x p numeric matrix; design matrix. needs provided get_prototypes TRUE. y Numeric response vector; needs provided get_prototypes TRUE. Note: general, css function require y numeric vector, provided fitfun use different form y (example, categorical response variable). However, y must numeric order provide prototypes prototypes determined using correlation cluster members (columns x) y. R Numeric p x p matrix; currently used. Entry ij contains \"substitutive value\" feature feature j (diagonal must consist ones, entries must 0 1, matrix must symmetric)","code":""},{"path":"/reference/checkFormatClustersInput.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Helper function to ensure that the inputs to formatClusters are as expected — checkFormatClustersInput","text":"list integer vectors; vector contain indices cluster features. duplicated clusters provided input removed.","code":""},{"path":"/reference/checkFormatClustersInput.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Helper function to ensure that the inputs to formatClusters are as expected — checkFormatClustersInput","text":"Gregory Faletto, Jacob Bien","code":""},{"path":"/reference/checkGenClusteredDataInputs.html","id":null,"dir":"Reference","previous_headings":"","what":"Check inputs to genClusteredData — checkGenClusteredDataInputs","title":"Check inputs to genClusteredData — checkGenClusteredDataInputs","text":"Check inputs genClusteredData","code":""},{"path":"/reference/checkGenClusteredDataInputs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check inputs to genClusteredData — checkGenClusteredDataInputs","text":"","code":"checkGenClusteredDataInputs(   p,   k_unclustered,   cluster_size,   n_clusters,   sig_clusters,   rho,   beta_latent,   beta_unclustered,   snr,   sigma_eps_sq )"},{"path":"/reference/checkGenClusteredDataInputs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check inputs to genClusteredData — checkGenClusteredDataInputs","text":"p Integer numeric; number features generate. generated X p columns. k_unclustered Integer numeric; number features X nonzero coefficients true model y among features generated n_clusters latent variables (called \"weak signal\" features simulations Faletto Bien 2022). coefficients features determined beta_unclustered. cluster_size Integer numeric; n_clusters latent variables, X contain cluster_size noisy proxies correlated latent variable. n_clusters Integer numeric; number latent variables generate, associated observed cluster X. Must least 1. Default 1. sig_clusters Integer numeric; number generated latent features nonzero coefficients true model y (coefficient beta_latent). Must less equal n_clusters. Default 1. rho Integer numeric; covariance proxies cluster latent variable (). Note correlation features cluster rho/var. equal 0. Default 0.9. beta_latent Integer numeric; coefficient used sig_clusters latent variables nonzero coefficients true model y. equal 0. Default 1.5. beta_unclustered Integer numeric; maximum coefficient model y among k_unclustered features X generated latent variables. coefficients features beta_unclustered/sqrt(1:k_unclustered). equal 0. Default 1. snr Integer numeric; signal--noise ratio response y. sigma_eps_sq specified, variance noise y calculated using formula sigma_eps_sq = sum(mu^2)/(n * snr). one snr sigma_eps_sq must specified. Default NA. sigma_eps_sq Integer numeric; variance noise added y. one snr sigma_eps_sq must specified. Default NA.","code":""},{"path":"/reference/checkGenClusteredDataInputs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check inputs to genClusteredData — checkGenClusteredDataInputs","text":"list following elements. X n x p numeric matrix n observations p-dimensional multivariate normal distribution generated using specified parameters. first n_clusters times cluster_size features clusters features correlated n_clusters latent variables. next k_unclustered features \"weak signal\" features, remaining p - n_clusters*cluster_size - k_unclustered features unclustered noise features. y length n numeric vector; response generated X, latent features Z, coefficient vector, along additive noise. Z latent features; either numeric vector (n_clusters > 1) numeric matrix (n_clusters > 1). Note (X, Z) multivariate Gaussian. itemmuA length n numeric vector; expected response given X, Z, true coefficient vector (equal y minus added noise).","code":""},{"path":"/reference/checkGenClusteredDataInputs.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Check inputs to genClusteredData — checkGenClusteredDataInputs","text":"Gregory Faletto, Jacob Bien","code":""},{"path":"/reference/checkGenClusteredDataWeightedInputs.html","id":null,"dir":"Reference","previous_headings":"","what":"Check inputs to genClusteredDataWeighted — checkGenClusteredDataWeightedInputs","title":"Check inputs to genClusteredDataWeighted — checkGenClusteredDataWeightedInputs","text":"Check inputs genClusteredDataWeighted","code":""},{"path":"/reference/checkGenClusteredDataWeightedInputs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check inputs to genClusteredDataWeighted — checkGenClusteredDataWeightedInputs","text":"","code":"checkGenClusteredDataWeightedInputs(   p,   k_unclustered,   cluster_size,   n_strong_cluster_vars,   n_clusters,   sig_clusters,   rho_high,   rho_low,   beta_latent,   beta_unclustered,   snr,   sigma_eps_sq )"},{"path":"/reference/checkGenClusteredDataWeightedInputs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check inputs to genClusteredDataWeighted — checkGenClusteredDataWeightedInputs","text":"p Integer numeric; number features generate. generated X p columns. k_unclustered Integer numeric; number features X nonzero coefficients true model y among features generated n_clusters latent variables (called \"weak signal\" features simulations Faletto Bien 2022). coefficients features determined beta_unclustered. cluster_size Integer numeric; n_clusters latent variables, X contain cluster_size noisy proxies correlated latent variable. n_strong_cluster_vars Integer numeric; among cluster_size proxies cluster, n_strong_cluster_vars high covariance (rho_high) latent variable cluster_size - n_strong_cluster_vars low covariance (rho_low) latent variable. n_clusters Integer numeric; number latent variables generate, associated observed cluster X. Must least 1. Default 1. sig_clusters Integer numeric; number generated latent features nonzero coefficients true model y (coefficient beta_latent). Must less equal n_clusters. Default 1. rho_high Integer numeric; covariance \"strong proxies\" cluster latent variable (). Note correlation \"strong proxy\" features cluster rho_high/var. rho_high equal 0 must least large rho_low. Default 0.9. rho_low Integer numeric; covariance \"weak proxies\" cluster latent variable (). Note correlation \"weak proxy\" features cluster rho_low/var. rho_low equal 0 must larger rho_high. Default 0.5. beta_latent Integer numeric; coefficient used sig_clusters latent variables nonzero coefficients true model y. equal 0. Default 1.5. beta_unclustered Integer numeric; maximum coefficient model y among k_unclustered features X generated latent variables. coefficients features beta_unclustered/sqrt(1:k_unclustered). equal 0. Default 1. snr Integer numeric; signal--noise ratio response y. sigma_eps_sq specified, variance noise y calculated using formula sigma_eps_sq = sum(mu^2)/(n * snr). one snr sigma_eps_sq must specified. Default NA. sigma_eps_sq Integer numeric; variance noise added y. one snr sigma_eps_sq must specified. Default NA. n Integer numeric; number observations generate. (generated X Z n rows, generated y mu length n.)","code":""},{"path":"/reference/checkGenClusteredDataWeightedInputs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check inputs to genClusteredDataWeighted — checkGenClusteredDataWeightedInputs","text":"list following elements. X n x p numeric matrix n observations p-dimensional multivariate normal distribution generated using specified parameters. first n_clusters times cluster_size features clusters features correlated n_clusters latent variables. next k_unclustered features \"weak signal\" features, remaining p - n_clusters*cluster_size - k_unclustered features unclustered noise features. y length n numeric vector; response generated X, latent features Z, coefficient vector, along additive noise. Z latent features; either numeric vector (n_clusters > 1) numeric matrix (n_clusters > 1). Note (X, Z) multivariate Gaussian. mu length n numeric vector; expected response given X, Z, true coefficient vector (equal y minus added noise).","code":""},{"path":"/reference/checkGenClusteredDataWeightedInputs.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Check inputs to genClusteredDataWeighted — checkGenClusteredDataWeightedInputs","text":"Gregory Faletto, Jacob Bien","code":""},{"path":"/reference/checkGetClusterSelMatrixInput.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper function to check inputs to getClusterSelMatrix function — checkGetClusterSelMatrixInput","title":"Helper function to check inputs to getClusterSelMatrix function — checkGetClusterSelMatrixInput","text":"Helper function check inputs getClusterSelMatrix function","code":""},{"path":"/reference/checkGetClusterSelMatrixInput.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper function to check inputs to getClusterSelMatrix function — checkGetClusterSelMatrixInput","text":"","code":"checkGetClusterSelMatrixInput(clusters, res)"},{"path":"/reference/checkGetClusterSelMatrixInput.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper function to check inputs to getClusterSelMatrix function — checkGetClusterSelMatrixInput","text":"clusters named list entry integer vector indices features common cluster, output formatClusters. (length list clusters equal number clusters.) identified clusters must non-overlapping, features must appear exactly one cluster (unclustered features \"cluster\" size 1). res binary integer matrix. resi, j = 1 feature j selected subsample equals 0 otherwise, output getSelMatrix. (, row selected set.)","code":""},{"path":"/reference/checkGetClusterSelMatrixInput.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Helper function to check inputs to getClusterSelMatrix function — checkGetClusterSelMatrixInput","text":"parameter B, corresponding half subsamples sampling_type \"SS\".","code":""},{"path":"/reference/checkGetClusterSelMatrixInput.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Helper function to check inputs to getClusterSelMatrix function — checkGetClusterSelMatrixInput","text":"Gregory Faletto, Jacob Bien","code":""},{"path":"/reference/checkGetCssPredsInputs.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper function to confirm that inputs to the function getCssPreds are as\nexpected, and modify inputs if needed. — checkGetCssPredsInputs","title":"Helper function to confirm that inputs to the function getCssPreds are as\nexpected, and modify inputs if needed. — checkGetCssPredsInputs","text":"Helper function confirm inputs function getCssPreds expected, modify inputs needed.","code":""},{"path":"/reference/checkGetCssPredsInputs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper function to confirm that inputs to the function getCssPreds are as\nexpected, and modify inputs if needed. — checkGetCssPredsInputs","text":"","code":"checkGetCssPredsInputs(   css_results,   testX,   weighting,   cutoff,   min_num_clusts,   max_num_clusts,   trainX,   trainY )"},{"path":"/reference/checkGetCssPredsInputs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper function to confirm that inputs to the function getCssPreds are as\nexpected, and modify inputs if needed. — checkGetCssPredsInputs","text":"css_results object class \"cssr\" (output function css). testX numeric matrix (preferably) data.frame (coerced internally matrix function model.matrix) containing data used generate predictions. Must contain features (number columns) matrix provided css. weighting Character; determines calculate weights combine features selected clusters weighted averages, called cluster representatives. Must one \"sparse\", \"weighted_avg\", \"simple_avg'. \"sparse\", weight put frequently selected individual cluster member (divided equally among clusters tied top selection proportion tie). \"weighted_avg\", weight used cluster member calculated proportion individual selection proportions feature. \"simple_avg\", cluster member gets equal weight regardless individual feature selection proportions (, cluster representative just simple average cluster members). See Faletto Bien (2022) details. Default \"weighted_avg\". cutoff Numeric; getCssPreds make use clusters selection proportions equal least cutoff. Must 0 1. Default 0 (case either clusters used, max_num_clusts used, max_num_clusts specified). min_num_clusts Integer numeric; minimum number clusters use regardless cutoff. (, chosen cutoff returns fewer min_num_clusts clusters, cutoff increased least min_num_clusts clusters selected.) Default 1. max_num_clusts Integer numeric; maximum number clusters use regardless cutoff. (, chosen cutoff returns max_num_clusts clusters, cutoff decreased max_num_clusts clusters selected.) Default NA (case max_num_clusts ignored). trainX numeric matrix (preferably) data.frame (coerced internally matrix function model.matrix) containing data used estimate linear model selected clusters. trainX necessary provide train_inds designated css function call set aside observations model estimation (though even train_inds provided, trainX trianY used model estimation provided getCssPreds). Must contain features (number columns) matrix provided css, columns trainX labeled, names must match variable names provided css. Default NA (case getCssPreds uses observations train_inds provided css estimate linear model). trainY response corresponding trainX. Must real-valued response (unlike general css setup) predictions generated ordinary least squares model. Must length number rows trainX. Like trainX, needs provided observations set aside model estimation parameter train_inds css function call. Default NA (case getCssPreds uses observations train_inds provided css).","code":""},{"path":"/reference/checkGetCssPredsInputs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Helper function to confirm that inputs to the function getCssPreds are as\nexpected, and modify inputs if needed. — checkGetCssPredsInputs","text":"named list following elements: trainXProvided Logical; indicates whether valid trainX input provided. trainX provided trainX matrix, coerced data.frame matrix provided trainX data.frame. (valid trainX provided, output simply passes whatever provided trainX.) testX provided testX matrix, coerced data.frame matrix provided testX data.frame. feat_names character vector containing column names testX (provided testX column names). provided testX column names, feat_names NA. max_num_clusts provided max_num_clusts, coerced integer needed, coerced less equal total number clusters output css_results.","code":""},{"path":"/reference/checkGetCssPredsInputs.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Helper function to confirm that inputs to the function getCssPreds are as\nexpected, and modify inputs if needed. — checkGetCssPredsInputs","text":"Gregory Faletto, Jacob Bien","code":""},{"path":"/reference/checkGetSelectedClustersOutput.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper function to check that output of getSelectedClusters is as expected — checkGetSelectedClustersOutput","title":"Helper function to check that output of getSelectedClusters is as expected — checkGetSelectedClustersOutput","text":"Helper function check output getSelectedClusters expected","code":""},{"path":"/reference/checkGetSelectedClustersOutput.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper function to check that output of getSelectedClusters is as expected — checkGetSelectedClustersOutput","text":"","code":"checkGetSelectedClustersOutput(   selected_clusts,   selected_feats,   weights,   n_clusters,   p )"},{"path":"/reference/checkGetSelectedClustersOutput.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper function to check that output of getSelectedClusters is as expected — checkGetSelectedClustersOutput","text":"selected_clusts named numeric vector containing selection proportions selected clusters. name entry name corresponding cluster. selected_feats named integer vector; indices features nonzero weights selected clusters. weights named list length number selected clusters. list element weights[j] numeric vector weights use jth selected cluster, name cluster corresponds . n_clusters Integer; number clusters data (upper bound length selected_clusts) p Integer; number features data (selected_feats 1:p)","code":""},{"path":"/reference/checkGetSelectedClustersOutput.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Helper function to check that output of getSelectedClusters is as expected — checkGetSelectedClustersOutput","text":"Gregory Faletto, Jacob Bien","code":""},{"path":"/reference/checkGetXglmnetInputs.html","id":null,"dir":"Reference","previous_headings":"","what":"Verifies the inputs for getXglmnet. — checkGetXglmnetInputs","title":"Verifies the inputs for getXglmnet. — checkGetXglmnetInputs","text":"Verifies inputs getXglmnet.","code":""},{"path":"/reference/checkGetXglmnetInputs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Verifies the inputs for getXglmnet. — checkGetXglmnetInputs","text":"","code":"checkGetXglmnetInputs(x, clusters, type, prototypes)"},{"path":"/reference/checkGetXglmnetInputs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Verifies the inputs for getXglmnet. — checkGetXglmnetInputs","text":"x numeric matrix; provided matrix n observations p features. clusters named list entry integer vector indices features common cluster. (length list clusters equal number clusters.) identified clusters non-overlapping. features appear exactly one cluster (unclustered features put \"cluster\" size 1). type Character; \"protolasso\" protolasso \"clusterRepLasso\" cluster representative lasso. prototypes required type \"protolasso\". integer vector whose length equal number clusters. Entry prototype cluster (feature belonging cluster highly correlated y; see Reid Tibshirani 2016).","code":""},{"path":"/reference/checkGetXglmnetInputs.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Verifies the inputs for getXglmnet. — checkGetXglmnetInputs","text":"Reid, S., & Tibshirani, R. (2016). Sparse regression marginal testing using cluster prototypes. Biostatistics, 17(2), 364–376. https://doi.org/10.1093/biostatistics/kxv049.","code":""},{"path":"/reference/checkGetXglmnetInputs.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Verifies the inputs for getXglmnet. — checkGetXglmnetInputs","text":"Gregory Faletto, Jacob Bien","code":""},{"path":"/reference/checkMaxNumClusts.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper function to confirm that the argument max_num_clusts to several\nfunctions is as expected — checkMaxNumClusts","title":"Helper function to confirm that the argument max_num_clusts to several\nfunctions is as expected — checkMaxNumClusts","text":"Helper function confirm argument max_num_clusts several functions expected","code":""},{"path":"/reference/checkMaxNumClusts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper function to confirm that the argument max_num_clusts to several\nfunctions is as expected — checkMaxNumClusts","text":"","code":"checkMaxNumClusts(max_num_clusts, min_num_clusts, p, n_clusters)"},{"path":"/reference/checkMaxNumClusts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper function to confirm that the argument max_num_clusts to several\nfunctions is as expected — checkMaxNumClusts","text":"max_num_clusts Integer numeric; maximum number clusters use regardless cutoff. (, chosen cutoff returns max_num_clusts clusters, cutoff decreased max_num_clusts clusters selected.) Can NA, case max_num_clusts ignored. min_num_clusts Integer numeric; minimum number clusters use regardless cutoff. (, chosen cutoff returns fewer min_num_clusts clusters, cutoff increased least min_num_clusts clusters selected.) max_num_clusts must least large min_num_clusts. p number features; since upper bound number clusters features, also upper bound max_num_clusts. n_clusters number clusters; note upper bound max_num_clusts","code":""},{"path":"/reference/checkMaxNumClusts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Helper function to confirm that the argument max_num_clusts to several\nfunctions is as expected — checkMaxNumClusts","text":"provided max_num_clusts, coerced integer needed, coerced less equal total number clusters.","code":""},{"path":"/reference/checkMaxNumClusts.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Helper function to confirm that the argument max_num_clusts to several\nfunctions is as expected — checkMaxNumClusts","text":"Gregory Faletto, Jacob Bien","code":""},{"path":"/reference/checkMinNumClusts.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper function to confirm that the argument min_num_clusts to several\nfunctions is as expected — checkMinNumClusts","title":"Helper function to confirm that the argument min_num_clusts to several\nfunctions is as expected — checkMinNumClusts","text":"Helper function confirm argument min_num_clusts several functions expected","code":""},{"path":"/reference/checkMinNumClusts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper function to confirm that the argument min_num_clusts to several\nfunctions is as expected — checkMinNumClusts","text":"","code":"checkMinNumClusts(min_num_clusts, p, n_clusters)"},{"path":"/reference/checkMinNumClusts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper function to confirm that the argument min_num_clusts to several\nfunctions is as expected — checkMinNumClusts","text":"min_num_clusts Integer numeric; minimum number clusters use regardless cutoff. (, chosen cutoff returns fewer min_num_clusts clusters, cutoff increased least min_num_clusts clusters selected.) p number features; since upper bound number clusters features, also upper bound min_num_clusts. n_clusters number clusters; note upper bound min_num_clusts","code":""},{"path":"/reference/checkMinNumClusts.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Helper function to confirm that the argument min_num_clusts to several\nfunctions is as expected — checkMinNumClusts","text":"Gregory Faletto, Jacob Bien","code":""},{"path":"/reference/checkNewXProvided.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper function to confirm that the new X matrix provided to getCssDesign or\ngetCssPreds matches the characteristics of the X that was provided to css. — checkNewXProvided","title":"Helper function to confirm that the new X matrix provided to getCssDesign or\ngetCssPreds matches the characteristics of the X that was provided to css. — checkNewXProvided","text":"Helper function confirm new X matrix provided getCssDesign getCssPreds matches characteristics X provided css.","code":""},{"path":"/reference/checkNewXProvided.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper function to confirm that the new X matrix provided to getCssDesign or\ngetCssPreds matches the characteristics of the X that was provided to css. — checkNewXProvided","text":"","code":"checkNewXProvided(trainX, css_results)"},{"path":"/reference/checkNewXProvided.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper function to confirm that the new X matrix provided to getCssDesign or\ngetCssPreds matches the characteristics of the X that was provided to css. — checkNewXProvided","text":"trainX numeric matrix (preferably) data.frame (coerced internally matrix function model.matrix). Must contain features (number columns) X matrix provided css, columns trainX labeled, names must match variable names provided css. trainX may omitted train_inds provided css set aside observations. css_results object class \"cssr\" (output function css).","code":""},{"path":"/reference/checkNewXProvided.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Helper function to confirm that the new X matrix provided to getCssDesign or\ngetCssPreds matches the characteristics of the X that was provided to css. — checkNewXProvided","text":"named list following elements: newX trainX provided, provided trainX matrix, coerced data.frame matrix provided trainX data.frame. trainX provided, matrix made training indices provided css train_inds argument. newXProvided Logical; indicates whether valid trainX input provided.","code":""},{"path":"/reference/checkNewXProvided.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Helper function to confirm that the new X matrix provided to getCssDesign or\ngetCssPreds matches the characteristics of the X that was provided to css. — checkNewXProvided","text":"Gregory Faletto, Jacob Bien","code":""},{"path":"/reference/checkPropFeatsRemove.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper function to confirm that the argument prop_feats_remove to several\nfunctions is as expected — checkPropFeatsRemove","title":"Helper function to confirm that the argument prop_feats_remove to several\nfunctions is as expected — checkPropFeatsRemove","text":"Helper function confirm argument prop_feats_remove several functions expected","code":""},{"path":"/reference/checkPropFeatsRemove.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper function to confirm that the argument prop_feats_remove to several\nfunctions is as expected — checkPropFeatsRemove","text":"","code":"checkPropFeatsRemove(prop_feats_remove, p)"},{"path":"/reference/checkPropFeatsRemove.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper function to confirm that the argument prop_feats_remove to several\nfunctions is as expected — checkPropFeatsRemove","text":"prop_feats_remove Numeric; proportion features dropped subsample. Must 0 1. p number features; must greater 2 prop_feats_remove greater 0.","code":""},{"path":"/reference/checkPropFeatsRemove.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Helper function to confirm that the argument prop_feats_remove to several\nfunctions is as expected — checkPropFeatsRemove","text":"Gregory Faletto, Jacob Bien","code":""},{"path":"/reference/checkSamplingType.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper function to confirm that the argument sampling_type to several\nfunctions is as expected — checkSamplingType","title":"Helper function to confirm that the argument sampling_type to several\nfunctions is as expected — checkSamplingType","text":"Helper function confirm argument sampling_type several functions expected","code":""},{"path":"/reference/checkSamplingType.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper function to confirm that the argument sampling_type to several\nfunctions is as expected — checkSamplingType","text":"","code":"checkSamplingType(sampling_type)"},{"path":"/reference/checkSamplingType.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper function to confirm that the argument sampling_type to several\nfunctions is as expected — checkSamplingType","text":"sampling_type character vector; either \"SS\" \"MB\". \"MB\" supported yet.","code":""},{"path":"/reference/checkSamplingType.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Helper function to confirm that the argument sampling_type to several\nfunctions is as expected — checkSamplingType","text":"Gregory Faletto, Jacob Bien","code":""},{"path":"/reference/checkSelectedClusters.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper function to check operations within getSelectedClusters function — checkSelectedClusters","title":"Helper function to check operations within getSelectedClusters function — checkSelectedClusters","text":"Helper function check operations within getSelectedClusters function","code":""},{"path":"/reference/checkSelectedClusters.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper function to check operations within getSelectedClusters function — checkSelectedClusters","text":"","code":"checkSelectedClusters(   n_sel_clusts,   min_num_clusts,   max_num_clusts,   max_sel_prop )"},{"path":"/reference/checkSelectedClusters.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper function to check operations within getSelectedClusters function — checkSelectedClusters","text":"n_sel_clusts number selected clusters; constrained min_num_clusts max_num_clusts (though may possible satisfy constraints simulteneously, case warning thrown). min_num_clusts Integer numeric; minimum number clusters use regardless cutoff. (, chosen cutoff returns fewer min_num_clusts clusters, cutoff increased least min_num_clusts clusters selected.) max_num_clusts Integer numeric; maximum number clusters use regardless cutoff. (, chosen cutoff returns max_num_clusts clusters, cutoff decreased max_num_clusts clusters selected.) NA, max_num_clusts ignored. max_sel_prop Numeric; maximum selection proportion observed cluster.","code":""},{"path":"/reference/checkSelectedClusters.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Helper function to check operations within getSelectedClusters function — checkSelectedClusters","text":"Gregory Faletto, Jacob Bien","code":""},{"path":"/reference/checkWeighting.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper function to confirm that the argument weighting to several\nfunctions is as expected — checkWeighting","title":"Helper function to confirm that the argument weighting to several\nfunctions is as expected — checkWeighting","text":"Helper function confirm argument weighting several functions expected","code":""},{"path":"/reference/checkWeighting.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper function to confirm that the argument weighting to several\nfunctions is as expected — checkWeighting","text":"","code":"checkWeighting(weighting)"},{"path":"/reference/checkWeighting.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper function to confirm that the argument weighting to several\nfunctions is as expected — checkWeighting","text":"weighting Character; determines calculate weights combine features selected clusters weighted averages, called cluster representatives. Must one \"sparse\", \"weighted_avg\", \"simple_avg'.","code":""},{"path":"/reference/checkWeighting.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Helper function to confirm that the argument weighting to several\nfunctions is as expected — checkWeighting","text":"Gregory Faletto, Jacob Bien","code":""},{"path":"/reference/checkXInputResults.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper function to confirm that inputs to several functions are as expected,\nand modify inputs if needed — checkXInputResults","title":"Helper function to confirm that inputs to several functions are as expected,\nand modify inputs if needed — checkXInputResults","text":"Helper function confirm inputs several functions expected, modify inputs needed","code":""},{"path":"/reference/checkXInputResults.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper function to confirm that inputs to several functions are as expected,\nand modify inputs if needed — checkXInputResults","text":"","code":"checkXInputResults(newx, css_X)"},{"path":"/reference/checkXInputResults.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper function to confirm that inputs to several functions are as expected,\nand modify inputs if needed — checkXInputResults","text":"newx numeric matrix (preferably) data.frame (coerced internally matrix function model.matrix) containing data used generate design matrix cluster representatives. Must contain features (number columns) X matrix provided css, columns newX labeled, names must match variable names provided css. css_X X matrix provided css, output css function (coerced data.frame matrix css needed).","code":""},{"path":"/reference/checkXInputResults.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Helper function to confirm that inputs to several functions are as expected,\nand modify inputs if needed — checkXInputResults","text":"named list following elements. feat_names character vector containing column names newx (provided newx column names). provided newx column names, feat_names NA. newx provided newx matrix, coerced data.frame matrix provided newx data.frame.","code":""},{"path":"/reference/checkXInputResults.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Helper function to confirm that inputs to several functions are as expected,\nand modify inputs if needed — checkXInputResults","text":"Gregory Faletto, Jacob Bien","code":""},{"path":"/reference/checkY.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper function to confirm that the argument y to several functions is\nas expected — checkY","title":"Helper function to confirm that the argument y to several functions is\nas expected — checkY","text":"Helper function confirm argument y several functions expected","code":""},{"path":"/reference/checkY.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper function to confirm that the argument y to several functions is\nas expected — checkY","text":"","code":"checkY(y, n)"},{"path":"/reference/checkY.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper function to confirm that the argument y to several functions is\nas expected — checkY","text":"y Numeric response vector. n Number observations covariates; match length y.","code":""},{"path":"/reference/checkY.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Helper function to confirm that the argument y to several functions is\nas expected — checkY","text":"Gregory Faletto, Jacob Bien","code":""},{"path":"/reference/clusterRepLasso.html","id":null,"dir":"Reference","previous_headings":"","what":"Select features via the cluster representative lasso (Bühlmann et. al. 2013) — clusterRepLasso","title":"Select features via the cluster representative lasso (Bühlmann et. al. 2013) — clusterRepLasso","text":"Select features via cluster representative lasso (Bühlmann et. al. 2013)","code":""},{"path":"/reference/clusterRepLasso.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Select features via the cluster representative lasso (Bühlmann et. al. 2013) — clusterRepLasso","text":"","code":"clusterRepLasso(X, y, clusters = list(), nlambda = 100)"},{"path":"/reference/clusterRepLasso.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Select features via the cluster representative lasso (Bühlmann et. al. 2013) — clusterRepLasso","text":"X n x p numeric matrix (preferably) data.frame (coerced internally matrix function model.matrix) containing p >= 2 features/predictors y response; length n numeric (integer) real-valued vector. clusters list integer vectors; vector contain indices cluster features (subset 1:p). (one cluster, clusters can either list length 1 integer vector.) provided clusters must non-overlapping. Every feature appearing cluster assumed unclustered (, treated \"cluster\" containing ). CAUTION: provided X data.frame contains categorical feature two levels, resulting matrix made model.matrix different number columns provided data.frame, feature numbers change, clusters argument work properly (current version package). get correct results case, please use model.matrix convert data.frame numeric matrix , provide matrix cluster assignments respect matrix. Default list() (clusters specified). nlambda Integer; number lambda values use lasso fit cluster representative lasso. Default 100 (following default glmnet). now, nlambda must least 2 (using single lambda supported).","code":""},{"path":"/reference/clusterRepLasso.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Select features via the cluster representative lasso (Bühlmann et. al. 2013) — clusterRepLasso","text":"list three elements. selected_sets list integer vectors. Entry k list contains selected set (integer vector) size k yielded lasso--member set index single feature cluster selected cluster representative lasso (prototype cluster--cluster member highly correlated y). (set size k selected, entry k empty.) selected_clusts_list list; element list named list selected clusters. (, selected set size k yielded cluster representative lasso, selected_clusts_list[k] named list length k, member list integer vector cluster members. Note selected_clusts_lists[k][j] cluster contains feature selected_sets[k]j.) beta beta output glmnet lasso estimated matrix prototypes. (See documentation function glmnet glmnet package details.)","code":""},{"path":"/reference/clusterRepLasso.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Select features via the cluster representative lasso (Bühlmann et. al. 2013) — clusterRepLasso","text":"Bühlmann, P., Rütimann, P., van de Geer, S., & Zhang, C. H. (2013). Correlated variables regression: Clustering sparse estimation. Journal Statistical Planning Inference, 143(11), 1835–1858. https://doi.org/10.1016/j.jspi.2013.05.019.  Jerome Friedman, Trevor Hastie, Robert Tibshirani (2010). Regularization Paths Generalized Linear Models via Coordinate Descent. Journal Statistical Software, 33(1) ' 1-22. URL https://www.jstatsoft.org/v33/i01/.","code":""},{"path":"/reference/corFunction.html","id":null,"dir":"Reference","previous_headings":"","what":"Absolute value of sample correlation between two vectors — corFunction","title":"Absolute value of sample correlation between two vectors — corFunction","text":"Calculates absolute value correlation t y. either input one unique value, returns 0 definition.","code":""},{"path":"/reference/corFunction.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Absolute value of sample correlation between two vectors — corFunction","text":"","code":"corFunction(t, y)"},{"path":"/reference/corFunction.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Absolute value of sample correlation between two vectors — corFunction","text":"t numeric integer vector. y numeric integer vector; must length t.","code":""},{"path":"/reference/corFunction.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Absolute value of sample correlation between two vectors — corFunction","text":"numeric vector length cluster_i containing weights corresponding features cluster_i. weights nonnegative sum 1.","code":""},{"path":"/reference/corFunction.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Absolute value of sample correlation between two vectors — corFunction","text":"Gregory Faletto, Jacob Bien","code":""},{"path":"/reference/createSubsamples.html","id":null,"dir":"Reference","previous_headings":"","what":"Creates lists of subsamples for stability selection. — createSubsamples","title":"Creates lists of subsamples for stability selection. — createSubsamples","text":"Creates lists subsamples stability selection.","code":""},{"path":"/reference/createSubsamples.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Creates lists of subsamples for stability selection. — createSubsamples","text":"","code":"createSubsamples(n, p, B, sampling_type, prop_feats_remove = 0)"},{"path":"/reference/createSubsamples.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Creates lists of subsamples for stability selection. — createSubsamples","text":"n Integer numeric; sample size data set. p Integer numeric; number features. B Integer numeric; number subsamples. Note: sampling_type==\"MB\" total number subsamples B; sampling_type=\"SS\" number subsamples 2*B. Default 100 sampling_type=\"MB\" 50 sampling_type=\"SS\". sampling_type character vector; either \"SS\" \"MB\". \"MB\", B subsamples drawn randomly (proposed Meinshausen Bühlmann 2010). \"SS\", addition B subsamples, B complementary pair subsamples drawn well (see Faletto Bien 2022 Shah Samworth 2013 details). Default \"SS\", \"MB\" supported yet. num_feats_remove Integer; number features select automatically every iteration. Determined earlier input prop_feats_remove css.","code":""},{"path":"/reference/createSubsamples.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Creates lists of subsamples for stability selection. — createSubsamples","text":"list length B (2*B sampling_type = \"SS\"). prop_feats_remove = 0, list element integer vector length floor(n/2) containing indices subsample 1:n. (sampling_type==\"SS\", last B subsamples complementary pairs first B subsamples; see Faletto Bien 2022 Shah Samworth 2013 details.) prop_feats_remove > 0, element named list members \"subsample\" () \"feats_to_keep\", logical vector length p; feats_to_keep[j] = TRUE feature j chosen subsample, false otherwise.","code":""},{"path":"/reference/createSubsamples.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Creates lists of subsamples for stability selection. — createSubsamples","text":"Faletto, G., & Bien, J. (2022). Cluster Stability Selection. arXiv preprint arXiv:2201.00494. https://arxiv.org/abs/2201.00494. Shah, R. D., & Samworth, R. J. (2013). Variable selection error control: Another look stability selection. Journal Royal Statistical Society. Series B: Statistical Methodology, 75(1), 55–80. https://doi.org/10.1109/RITA.2014.2302071.","code":""},{"path":"/reference/createSubsamples.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Creates lists of subsamples for stability selection. — createSubsamples","text":"Gregory Faletto, Jacob Bien","code":""},{"path":"/reference/css.html","id":null,"dir":"Reference","previous_headings":"","what":"Cluster Stability Selection — css","title":"Cluster Stability Selection — css","text":"Executes cluster stability selection algorithm. Takes subsamples data, executes feature selection algorithm subsample, returns matrices feature selection indicators well cluster selection indicators.","code":""},{"path":"/reference/css.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cluster Stability Selection — css","text":"","code":"css(   X,   y,   lambda,   clusters = list(),   fitfun = cssLasso,   sampling_type = \"SS\",   B = ifelse(sampling_type == \"MB\", 100L, 50L),   prop_feats_remove = 0,   train_inds = integer(),   num_cores = 1L )"},{"path":"/reference/css.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cluster Stability Selection — css","text":"X n x p numeric matrix (preferably) data.frame (coerced internally matrix function model.matrix) containing p >= 2 features/predictors. y response; can anything takes form n-dimensional vector, ith entry corresponding ith row X. Typically (default fitfun = cssLasso), y n-dimensional numeric vector. lambda tuning parameter set tuning parameters may used feature selection method fitfun. default case fitfun = cssLasso, lambda numeric: penalty use lasso fit. (css() require lambda particular object user-specified feature selection method fitfun, lambda can arbitrary object. See description fitfun .) clusters list integer vectors; vector contain indices cluster features (subset 1:p). (one cluster, clusters can either list length 1 integer vector.) provided clusters must non-overlapping. Every feature appearing cluster assumed unclustered (, treated \"cluster\" containing ). clusters list length 0 (list containing clusters length 1), css() returns results stability selection (returned feat_sel_mat identical clus_sel_mat). Names clusters needed later; clusters given names provided list given names automatically css(). #' CAUTION: provided X data.frame contains categorical feature two levels, resulting matrix made model.matrix different number columns provided data.frame, feature numbers change, clusters argument work properly (current version package). get correct results case, please use model.matrix convert data.frame numeric matrix , provide matrix cluster assignments respect matrix. Default list() (clusters specified). fitfun function; feature selection function used subsample cluster stability selection. can feature selection method; requirement accepts arguments (arguments) X, y, lambda returns integer vector subset 1:p. example, fitfun best subset selection forward stepwise selection LARS lambda desired model size; fitfun elastic net lambda length-two vector specifying lambda alpha. Default cssLasso, implementation lasso (relying R package glmnet), lambda must positive numeric specifying L1 penalty lasso. sampling_type character vector; either \"SS\" \"MB\". \"MB\", B subsamples drawn randomly (proposed Meinshausen Bühlmann 2010). \"SS\", addition B subsamples, B complementary pair subsamples drawn well (see Faletto Bien 2022 Shah Samworth 2013 details). Default \"SS\", \"MB\" supported yet. B Integer numeric; number subsamples. Note: sampling_type==\"MB\" total number subsamples B; sampling_type=\"SS\" number subsamples 2*B. Default 100 sampling_type=\"MB\" 50 sampling_type=\"SS\". prop_feats_remove Numeric; prop_feats_remove greater 0, subsample, feature randomly dropped design matrix provided fitfun probability prop_feats_remove (independently across features). , typical subsample, prop_feats_remove*p features dropped (though number vary). similar spirit (distinct ) extended stability selection (Beinrucker et. al. 2016); see paper benefits dropping features (besides increasing computational speed decreasing memory requirements). sampling_type=\"SS\", features dropped complementary pair subsamples identical order ensure theoretical guarantees Faletto Bien (2022) retained within individual pair subsamples. (Note feature investigated either theoretically simulations Faletto Bien 2022). Must 0 1. Default 0. train_inds Optional; integer numeric vector containing indices observations X y set aside model training function getCssPreds() feature selection. (work y real-valued, getCssPreds() using ordinary least squares regression generate predictions.) train_inds provided, observations provided data set used feature selection. num_cores Optional; integer. using parallel processing, number cores use parallel processing (num_cores supplied internally mc.cores argument parallel::mclapply()).","code":""},{"path":"/reference/css.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Cluster Stability Selection — css","text":"list containing following items: feat_sel_mat B (2*B sampling_type=\"SS\") x p numeric (binary) matrix. feat_sel_mat[, j] = 1 feature j selected base feature selection method subsample , 0 otherwise. clus_sel_mat B (2*B SS sampling) x length(clusters) numeric (binary) matrix. clus_sel_mat[, j] = 1 least one feature cluster j selected base feature selection method subsample , 0 otherwise. X X matrix provided css(), coerced data.frame matrix needed. y y vector provided css(). clusters named list integer vectors containing clusters provided css(), well size 1 clusters features listed clusters provided css(). clusters names; clusters provided name input css() given names automatically css() (form c1, etc.). train_inds Identical train_inds provided css().","code":""},{"path":"/reference/css.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Cluster Stability Selection — css","text":"Faletto, G., & Bien, J. (2022). Cluster Stability Selection. arXiv preprint arXiv:2201.00494. https://arxiv.org/abs/2201.00494. Shah, R. D., & Samworth, R. J. (2013). Variable selection error control: Another look stability selection. Journal Royal Statistical Society. Series B: Statistical Methodology, 75(1), 55–80. https://doi.org/10.1109/RITA.2014.2302071. Meinshausen, N., & Bühlmann, P. (2010). Stability Selection. Journal Royal Statistical Society. Series B: Statistical Methodology, 72(4), 417–473. https://rss.onlinelibrary.wiley.com/doi/full/10.1111/j.1467-9868.2010.00740.x. Beinrucker, ., Dogan, Ü., & Blanchard, G. (2016). Extensions stability selection using subsamples observations covariates. Statistics Computing, 26(5), 1059- 1077. https://doi.org/10.1007/s11222-015-9589-y. Jerome Friedman, Trevor Hastie, Robert Tibshirani (2010). Regularization Paths Generalized Linear Models via Coordinate Descent. Journal Statistical Software, 33(1), 1-22. URL https://www.jstatsoft.org/v33/i01/.","code":""},{"path":"/reference/css.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Cluster Stability Selection — css","text":"Gregory Faletto, Jacob Bien","code":""},{"path":"/reference/cssLasso.html","id":null,"dir":"Reference","previous_headings":"","what":"Provided fitfun implementing the lasso — cssLasso","title":"Provided fitfun implementing the lasso — cssLasso","text":"Function used select features lasso subsample cluster stability selection. Uses glmnet implementation lasso.","code":""},{"path":"/reference/cssLasso.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Provided fitfun implementing the lasso — cssLasso","text":"","code":"cssLasso(X, y, lambda)"},{"path":"/reference/cssLasso.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Provided fitfun implementing the lasso — cssLasso","text":"X design matrix containing predictors. (practice subsample full design matrix provided css().) y numeric vector containing response. lambda Numeric; nonnegative number lasso penalty use subsample. (now, one lambda value can provided cssLasso(); future, plan allow multiple lambda values provided cssLasso(), described Faletto Bien 2022.)","code":""},{"path":"/reference/cssLasso.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Provided fitfun implementing the lasso — cssLasso","text":"integer vector; indices features selected lasso.","code":""},{"path":"/reference/cssLasso.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Provided fitfun implementing the lasso — cssLasso","text":"Faletto, G., & Bien, J. (2022). Cluster Stability Selection. arXiv preprint arXiv:2201.00494. https://arxiv.org/abs/2201.00494. Jerome Friedman, Trevor Hastie, Robert Tibshirani (2010). Regularization Paths Generalized Linear Models via Coordinate Descent. Journal Statistical Software, 33(1), 1-22. URL https://www.jstatsoft.org/v33/i01/.","code":""},{"path":"/reference/cssLasso.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Provided fitfun implementing the lasso — cssLasso","text":"Gregory Faletto, Jacob Bien","code":""},{"path":"/reference/cssLoop.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper function run on each subsample — cssLoop","title":"Helper function run on each subsample — cssLoop","text":"Runs provided feature selection method fitfun subsample cluster stability selection (function called within mclapply).","code":""},{"path":"/reference/cssLoop.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper function run on each subsample — cssLoop","text":"","code":"cssLoop(input, x, y, lambda, fitfun)"},{"path":"/reference/cssLoop.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper function run on each subsample — cssLoop","text":"input one two things: subsampleAn integer vector size n/2 containing indices observations subsample. drop_var_inputA named list containing two elements: one named \"subsample\" previous description, logical vector named \"feats_to_keep\" containing indices features automatically selected. (first object output function createSubsamples() provided prop_feats_remove 0, default, second object output createSubsamples() prop_feats_remove > 0.) x n x p numeric matrix containing predictors. (full design matrix provided css.) y response; can response takes form length n vector used (used) fitfun. Typically (default fitfun = cssLasso), y n-dimensional numeric vector containing response. full response provided css. lambda tuning parameter set tuning parameters may used feature selection method. example, default case fitfun = cssLasso, lambda numeric: penalty use lasso fit. fitfun function takes arguments X, y, lambda returns vector indices columns X (selected features).","code":""},{"path":"/reference/cssLoop.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Helper function run on each subsample — cssLoop","text":"integer vector; indices features selected fitfun.","code":""},{"path":"/reference/cssLoop.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Helper function run on each subsample — cssLoop","text":"Gregory Faletto, Jacob Bien","code":""},{"path":"/reference/cssPredict.html","id":null,"dir":"Reference","previous_headings":"","what":"Wrapper function to generate predictions from cluster stability selected\nmodel in one step — cssPredict","title":"Wrapper function to generate predictions from cluster stability selected\nmodel in one step — cssPredict","text":"Select clusters using cluster stability selection, form cluster representatives, fit linear model, generate predictions matrix unlabeled data. wrapper function css getCssPreds. Using cssPredict simpler, fewer options, executes full (computationally expensive) subsampling procedured every time called. contrast, css can called just , cssPredict can quickly return results different matrices new data using different values cutoff, max_num_clusts, etc. using calculations done one call css.","code":""},{"path":"/reference/cssPredict.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Wrapper function to generate predictions from cluster stability selected\nmodel in one step — cssPredict","text":"","code":"cssPredict(   X_train_selec,   y_train_selec,   X_test,   clusters = list(),   lambda = NA,   cutoff = NA,   max_num_clusts = NA,   train_inds = NA,   auto_select_size = TRUE )"},{"path":"/reference/cssPredict.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Wrapper function to generate predictions from cluster stability selected\nmodel in one step — cssPredict","text":"X_train_selec n x p numeric matrix (preferably) data.frame (coerced internally matrix function model.matrix) containing p >= 2 features/predictors. data X_train_selec y_train_selec split two parts; half data used feature selection cluster stability selection, half used estimating linear model selected cluster representatives. y_train_selec length-n numeric vector containing responses; y[] response corresponding observation X[, ]. Unlke general setup css, y_train_selec must real-valued predictions generated ordinary least squares. X_test numeric matrix (preferably) data.frame (coerced internally matrix function model.matrix) containing data used generate predictions. Must contain features (number columns) X_train_selec, columns X_test named, must match names X_train_selec. clusters Optional; either integer vector list integer vectors; vector contain indices cluster features (subset 1:p). (one cluster, clusters can either list length 1 integer vector.) provided clusters must non-overlapping. Every feature appearing cluster assumed unclustered (,  treated \"cluster\" containing ). clusters list length 0 (list containing clusters length 1), css() returns results stability selection (feat_sel_mat identical clus_sel_mat). Names clusters needed later; clusters given names list clusters given names automatically css. CAUTION: provided X data.frame contains categorical feature two levels, resulting matrix made model.matrix different number columns provided data.frame, feature numbers change, clusters argument work properly (current version package). get correct results case, please use model.matrix convert data.frame numeric matrix , provide matrix cluster assignments respect matrix.Default list() (clusters specified, every feature assumed \"cluster\" containing ). lambda Optional; tuning parameter used lasso feature selection subsample. lambda provided, cssPredict choose one automatically cross-validation. Default NA. cutoff Numeric; getCssPreds make use clusters selection proportions equal least cutoff. Must 0 1. Default 0 (case either clusters used, max_num_clusts used, max_num_clusts specified). max_num_clusts Integer numeric; maximum number clusters use regardless cutoff. (, chosen cutoff returns max_num_clusts clusters, cutoff decreased max_num_clusts clusters selected.) Default NA (case max_num_clusts ignored). train_inds Optional; integer numeric vector containing indices observations X y set aside model training feature selection. train_inds provided, half data used feature selection half model estimation (chosen random). auto_select_size Logical; TRUE, max_num_clusts automatically estimated using lasso cross-validation. Default TRUE, though argument ignored either cutoff max_num_clusts provided. (desired output generate predictions using clusters, set auto_select_size FALSE provide cutoff max_num_clusts.)","code":""},{"path":"/reference/cssPredict.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Wrapper function to generate predictions from cluster stability selected\nmodel in one step — cssPredict","text":"numeric vector length nrow(X_test) predictions corresponding observations X_test.","code":""},{"path":"/reference/cssPredict.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Wrapper function to generate predictions from cluster stability selected\nmodel in one step — cssPredict","text":"Gregory Faletto, Jacob Bien","code":""},{"path":"/reference/cssSelect.html","id":null,"dir":"Reference","previous_headings":"","what":"Obtain a selected set of clusters and features using cluster stability\nselection — cssSelect","title":"Obtain a selected set of clusters and features using cluster stability\nselection — cssSelect","text":"Takes data X y returns set clusters (set features) useful predicting y data X. wrapper function css getCssSelections. Using cssSelect simpler, fewer options, executes full (computationally expensive) subsampling procedured every time called. contrast, css can called just , getCssSelections can quickly return results using different values cutoff, max_num_clusts, etc. calculations done one call css.","code":""},{"path":"/reference/cssSelect.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Obtain a selected set of clusters and features using cluster stability\nselection — cssSelect","text":"","code":"cssSelect(   X,   y,   clusters = list(),   lambda = NA,   cutoff = NA,   max_num_clusts = NA,   auto_select_size = TRUE )"},{"path":"/reference/cssSelect.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Obtain a selected set of clusters and features using cluster stability\nselection — cssSelect","text":"X n x p numeric matrix (preferably) data.frame (coerced internally matrix function model.matrix) containing p >= 2 features/predictors. y length-n numeric vector containing responses; y[] response corresponding observation X[, ]. (Note css function, y numeric response, function, underlying selection procedure lasso, y must real-valued response.) clusters Optional; either integer vector list integer vectors; vector contain indices cluster features (subset 1:p). (one cluster, clusters can either list length 1 integer vector.) provided clusters must non-overlapping. Every feature appearing cluster assumed unclustered (,  treated \"cluster\" containing ). clusters list length 0 (list containing clusters length 1), css() returns results stability selection (feat_sel_mat identical clus_sel_mat). Names clusters needed later; clusters given names list clusters given names automatically css. CAUTION: provided X data.frame contains categorical feature two levels, resulting matrix made model.matrix different number columns provided data.frame, feature numbers change, clusters argument work properly (current version package). get correct results case, please use model.matrix convert data.frame numeric matrix , provide matrix cluster assignments respect matrix. Default list() (clusters specified, every feature assumed \"cluster\" containing ). lambda Optional; tuning parameter used lasso feature selection subsample. lambda provided, cssSelect choose one automatically cross-validation. Default NA. cutoff Numeric; cssSelect select clusters selection proportions equal least cutoff. Must 0 1. Default NA (case max_num_clusts used). max_num_clusts Integer numeric; maximum number clusters use regardless cutoff. (, chosen cutoff returns max_num_clusts clusters, cutoff decreased max_num_clusts clusters selected.) Default NA (case either cutoff used choose number clusters, cutoff also unspecified, cssSelect chooses max_num_clusts cross-validation). auto_select_size Logical; TRUE, max_num_clusts automatically estimated using lasso cross-validation. Default TRUE, though argument ignored either cutoff max_num_clusts provided. (desired output return clusters, set auto_select_size FALSE provide cutoff max_num_clusts.)","code":""},{"path":"/reference/cssSelect.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Obtain a selected set of clusters and features using cluster stability\nselection — cssSelect","text":"named list two items. selected_clusts list integer vectors; vector contains indices one selected clusters. selected_feats integer vector; indices selected features within selected clusters (typically one feature selected cluster).","code":""},{"path":"/reference/cssSelect.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Obtain a selected set of clusters and features using cluster stability\nselection — cssSelect","text":"Gregory Faletto, Jacob Bien","code":""},{"path":"/reference/cssr-package.html","id":null,"dir":"Reference","previous_headings":"","what":"Cluster Stability Selection — cssr-package","title":"Cluster Stability Selection — cssr-package","text":"Cluster stability selection feature selection method designed allow stability selection work effectively presence highly correlated features.  proposed https://arxiv.org/abs/2201.00494.  learn package, please visit website https://gregfaletto.github.io/cssr-project/.","code":""},{"path":[]},{"path":"/reference/cssr-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Cluster Stability Selection — cssr-package","text":"Maintainer: Gregory Faletto gregory.faletto@marshall.usc.edu Authors: Jacob Bien jbien@usc.edu","code":""},{"path":"/reference/formCssDesign.html","id":null,"dir":"Reference","previous_headings":"","what":"Create design matrix of cluster representatives from matrix of raw features\nusing results of css function — formCssDesign","title":"Create design matrix of cluster representatives from matrix of raw features\nusing results of css function — formCssDesign","text":"Create design matrix cluster representatives matrix raw features using results css function","code":""},{"path":"/reference/formCssDesign.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create design matrix of cluster representatives from matrix of raw features\nusing results of css function — formCssDesign","text":"","code":"formCssDesign(   css_results,   weighting = \"weighted_avg\",   cutoff = 0,   min_num_clusts = 1,   max_num_clusts = NA,   newx = NA )"},{"path":"/reference/formCssDesign.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create design matrix of cluster representatives from matrix of raw features\nusing results of css function — formCssDesign","text":"css_results object class \"cssr\" (output function css). weighting Character; determines calculate weights combine features selected clusters weighted averages, called cluster representatives. Must one \"sparse\", \"weighted_avg\", \"simple_avg'. \"sparse\", weight put frequently selected individual cluster member (divided equally among clusters tied top selection proportion tie). \"weighted_avg\", weight used cluster member calculated proportion individual selection proportions feature. \"simple_avg\", cluster member gets equal weight regardless individual feature selection proportions (, cluster representative just simple average cluster members). See Faletto Bien (2022) details. Default \"weighted_avg\". cutoff Numeric; css return clusters selection proportions equal least cutoff. Must 0 1. Default 0 (case clusters returned decreasing order selection proportion). min_num_clusts Integer numeric; minimum number clusters use regardless cutoff. (, chosen cutoff returns fewer min_num_clusts clusters, cutoff increased least min_num_clusts clusters selected.) Default 1. max_num_clusts Integer numeric; maximum number clusters use regardless cutoff. (, chosen cutoff returns max_num_clusts clusters, cutoff decreased max_num_clusts clusters selected.) Default NA (case max_num_clusts ignored). newx numeric matrix (preferably) data.frame (coerced internally matrix function model.matrix) containing data used generate design matrix cluster representatives. Must contain features (number columns) X matrix provided css, columns newx labeled, names must match variable names provided css. newx may omitted train_inds provided css set aside observations model estimation. case, newx omitted formCssDesign return design matrix cluster representatives formed train_inds observations matrix X provided css. (train_inds provided css, newX must provided formCssDesign.) Default NA.","code":""},{"path":"/reference/formCssDesign.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create design matrix of cluster representatives from matrix of raw features\nusing results of css function — formCssDesign","text":"design matrix number rows newx (train_inds provided css) columns constructed cluster representatives.","code":""},{"path":"/reference/formCssDesign.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Create design matrix of cluster representatives from matrix of raw features\nusing results of css function — formCssDesign","text":"Faletto, G., & Bien, J. (2022). Cluster Stability Selection. arXiv preprint arXiv:2201.00494. https://arxiv.org/abs/2201.00494.","code":""},{"path":"/reference/formCssDesign.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Create design matrix of cluster representatives from matrix of raw features\nusing results of css function — formCssDesign","text":"Gregory Faletto, Jacob Bien","code":""},{"path":"/reference/formatClusters.html","id":null,"dir":"Reference","previous_headings":"","what":"Formats clusters in standardized way, optionally estimating cluster\nprototypes — formatClusters","title":"Formats clusters in standardized way, optionally estimating cluster\nprototypes — formatClusters","text":"Formats clusters standardized way, optionally estimating cluster prototypes","code":""},{"path":"/reference/formatClusters.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Formats clusters in standardized way, optionally estimating cluster\nprototypes — formatClusters","text":"","code":"formatClusters(   clusters = NA,   p = -1,   clust_names = NA,   get_prototypes = FALSE,   x = NA,   y = NA,   R = NA )"},{"path":"/reference/formatClusters.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Formats clusters in standardized way, optionally estimating cluster\nprototypes — formatClusters","text":"clusters Either integer vector list integer vectors; vector contain indices cluster features. (one cluster, clusters can either list length 1 simply integer vector.) clusters specified R ignored. p integer numeric; numbe features x (match ncol(x), x provided) clust_names character vector names clusters clusters. get_prototypes Logical: TRUE, identify prototype cluster (feature cluster correlated response) protolasso. case, x y must provided. x n x p numeric matrix; design matrix. needs provided get_prototypes TRUE. y Numeric response vector; needs provided get_prototypes TRUE. Note: general, css function require y numeric vector, provided fitfun use different form y (example, categorical response variable). However, y must numeric order provide prototypes prototypes determined using correlation cluster members (columns x) y. R Numeric p x p matrix; currently used. Entry ij contains \"substitutive value\" feature feature j (diagonal must consist ones, entries must 0 1, matrix must symmetric)","code":""},{"path":"/reference/formatClusters.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Formats clusters in standardized way, optionally estimating cluster\nprototypes — formatClusters","text":"named list following elements: clusters named list entry integer vector indices features common cluster. (length list clusters equal number clusters.) identified clusters non-overlapping. features appear exactly one cluster (unclustered features put \"cluster\" size 1). multiple Logical; TRUE one cluster size greater 1, FALSE otherwise. prototypes returned get_prototypes=TRUE. integer vector whose length equal number clusters. Entry index feature belonging cluster highly correlated y (, prototype cluster, protolasso; see Reid Tibshirani 2016).","code":""},{"path":"/reference/formatClusters.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Formats clusters in standardized way, optionally estimating cluster\nprototypes — formatClusters","text":"Reid, S., & Tibshirani, R. (2016). Sparse regression marginal testing using cluster prototypes. Biostatistics, 17(2), 364–376. https://doi.org/10.1093/biostatistics/kxv049.","code":""},{"path":"/reference/formatClusters.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Formats clusters in standardized way, optionally estimating cluster\nprototypes — formatClusters","text":"Gregory Faletto, Jacob Bien","code":""},{"path":"/reference/genClusteredData.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate randomly sampled data including noisy observations of latent\nvariables — genClusteredData","title":"Generate randomly sampled data including noisy observations of latent\nvariables — genClusteredData","text":"Generate data set including latent features Z, observed features X (may include noisy noiseless observations latent features Z), observed response y linear model features Z X well independent mean zero noise, mu (responses y without added noise). Data generated way simulations Faletto Bien (2022).","code":""},{"path":"/reference/genClusteredData.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate randomly sampled data including noisy observations of latent\nvariables — genClusteredData","text":"","code":"genClusteredData(   n,   p,   k_unclustered,   cluster_size,   n_clusters = 1,   sig_clusters = 1,   rho = 0.9,   beta_latent = 1.5,   beta_unclustered = 1,   snr = as.numeric(NA),   sigma_eps_sq = as.numeric(NA) )"},{"path":"/reference/genClusteredData.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate randomly sampled data including noisy observations of latent\nvariables — genClusteredData","text":"n Integer numeric; number observations generate. (generated X Z n rows, generated y mu length n.) p Integer numeric; number features generate. generated X p columns. k_unclustered Integer numeric; number features X nonzero coefficients true model y among features generated n_clusters latent variables (called \"weak signal\" features simulations Faletto Bien 2022). coefficients features determined beta_unclustered. Must least 1. cluster_size Integer numeric; n_clusters latent variables, X contain cluster_size noisy proxies correlated latent variable. Must least 2. n_clusters Integer numeric; number latent variables generate, associated observed cluster X. Must least 1. Default 1. sig_clusters Integer numeric; number generated latent features nonzero coefficients true model y (coefficient beta_latent). Must less equal n_clusters. Default 1. rho Integer numeric; correlation proxies cluster latent variable. Must greater 0. Default 0.9. beta_latent Integer numeric; coefficient used sig_clusters latent variables nonzero coefficients true model y. equal 0. Default 1.5. beta_unclustered Integer numeric; maximum coefficient model y among k_unclustered features X generated latent variables. coefficients features beta_unclustered/sqrt(1:k_unclustered). equal 0. Default 1. snr Integer numeric; signal--noise ratio response y. sigma_eps_sq specified, variance noise y calculated using formula sigma_eps_sq = sum(mu^2)/(n * snr). one snr sigma_eps_sq must specified. Default NA. sigma_eps_sq Integer numeric; variance noise added y. one snr sigma_eps_sq must specified. Default NA.","code":""},{"path":"/reference/genClusteredData.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate randomly sampled data including noisy observations of latent\nvariables — genClusteredData","text":"list following elements. X n x p numeric matrix n observations p-dimensional multivariate normal distribution generated using specified parameters. first n_clusters times cluster_size features clusters features correlated n_clusters latent variables. next k_unclustered features \"weak signal\" features, remaining p - n_clusters*cluster_size - k_unclustered features unclustered noise features. y length n numeric vector; response generated X, latent features Z, coefficient vector, along additive noise. Z latent features; either numeric vector (n_clusters > 1) numeric matrix (n_clusters > 1). Note (X, Z) multivariate Gaussian. itemmuA length n numeric vector; expected response given X, Z, true coefficient vector (equal y minus added noise).","code":""},{"path":"/reference/genClusteredData.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Generate randomly sampled data including noisy observations of latent\nvariables — genClusteredData","text":"Faletto, G., & Bien, J. (2022). Cluster Stability Selection. arXiv preprint arXiv:2201.00494. https://arxiv.org/abs/2201.00494.","code":""},{"path":"/reference/genClusteredData.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Generate randomly sampled data including noisy observations of latent\nvariables — genClusteredData","text":"Gregory Faletto, Jacob Bien","code":""},{"path":"/reference/genClusteredDataWeighted.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate randomly sampled data including noisy observations of latent\nvariables, where proxies differ in their relevance (noise level) — genClusteredDataWeighted","title":"Generate randomly sampled data including noisy observations of latent\nvariables, where proxies differ in their relevance (noise level) — genClusteredDataWeighted","text":"Generate data set including latent features Z, observed features X (may include noisy noiseless observations latent features Z), observed response y linear model features Z X well independent mean zero noise, mu (responses y without added noise). Data generated way simulations Section 5.3 Faletto Bien (2022).","code":""},{"path":"/reference/genClusteredDataWeighted.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate randomly sampled data including noisy observations of latent\nvariables, where proxies differ in their relevance (noise level) — genClusteredDataWeighted","text":"","code":"genClusteredDataWeighted(   n,   p,   k_unclustered,   cluster_size,   n_strong_cluster_vars,   n_clusters = 1,   sig_clusters = 1,   rho_high = 0.9,   rho_low = 0.5,   beta_latent = 1.5,   beta_unclustered = 1,   snr = as.numeric(NA),   sigma_eps_sq = as.numeric(NA) )"},{"path":"/reference/genClusteredDataWeighted.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate randomly sampled data including noisy observations of latent\nvariables, where proxies differ in their relevance (noise level) — genClusteredDataWeighted","text":"n Integer numeric; number observations generate. (generated X Z n rows, generated y mu length n.) p Integer numeric; number features generate. generated X p columns. k_unclustered Integer numeric; number features X nonzero coefficients true model y among features generated n_clusters latent variables (called \"weak signal\" features simulations Faletto Bien 2022). coefficients features determined beta_unclustered. cluster_size Integer numeric; n_clusters latent variables, X contain cluster_size noisy proxies correlated latent variable. n_strong_cluster_vars Integer numeric; among cluster_size proxies cluster, n_strong_cluster_vars high covariance (rho_high) latent variable cluster_size - n_strong_cluster_vars low covariance (rho_low) latent variable. n_clusters Integer numeric; number latent variables generate, associated observed cluster X. Must least 1. Default 1. sig_clusters Integer numeric; number generated latent features nonzero coefficients true model y (coefficient beta_latent). Must less equal n_clusters. Default 1. rho_high Integer numeric; covariance \"strong proxies\" cluster latent variable (). Note correlation \"strong proxy\" features cluster rho_high/var. rho_high equal 0 must least large rho_low. Default 0.9. rho_low Integer numeric; covariance \"weak proxies\" cluster latent variable (). Note correlation \"weak proxy\" features cluster rho_low/var. rho_low equal 0 must larger rho_high. Default 0.5. beta_latent Integer numeric; coefficient used sig_clusters latent variables nonzero coefficients true model y. equal 0. Default 1.5. beta_unclustered Integer numeric; maximum coefficient model y among k_unclustered features X generated latent variables. coefficients features beta_unclustered/sqrt(1:k_unclustered). equal 0. Default 1. snr Integer numeric; signal--noise ratio response y. sigma_eps_sq specified, variance noise y calculated using formula sigma_eps_sq = sum(mu^2)/(n * snr). one snr sigma_eps_sq must specified. Default NA. sigma_eps_sq Integer numeric; variance noise added y. one snr sigma_eps_sq must specified. Default NA. var Integer numeric; variance observed features X (proxies latent variables k_unclustered features). equal 0. Default 1.","code":""},{"path":"/reference/genClusteredDataWeighted.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate randomly sampled data including noisy observations of latent\nvariables, where proxies differ in their relevance (noise level) — genClusteredDataWeighted","text":"list following elements. X n x p numeric matrix n observations p-dimensional multivariate normal distribution generated using specified parameters. first n_clusters times cluster_size features clusters features correlated n_clusters latent variables. next k_unclustered features \"weak signal\" features, remaining p - n_clusters*cluster_size - k_unclustered features unclustered noise features. y length n numeric vector; response generated X, latent features Z, coefficient vector, along additive noise. Z latent features; either numeric vector (n_clusters > 1) numeric matrix (n_clusters > 1). Note (X, Z) multivariate Gaussian. mu length n numeric vector; expected response given X, Z, true coefficient vector (equal y minus added noise).","code":""},{"path":"/reference/genClusteredDataWeighted.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Generate randomly sampled data including noisy observations of latent\nvariables, where proxies differ in their relevance (noise level) — genClusteredDataWeighted","text":"Faletto, G., & Bien, J. (2022). Cluster Stability Selection. arXiv preprint arXiv:2201.00494. https://arxiv.org/abs/2201.00494.","code":""},{"path":"/reference/genClusteredDataWeighted.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Generate randomly sampled data including noisy observations of latent\nvariables, where proxies differ in their relevance (noise level) — genClusteredDataWeighted","text":"Gregory Faletto, Jacob Bien","code":""},{"path":"/reference/genMuXZSd.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate observed and latent variables along with conditional mean — genMuXZSd","title":"Generate observed and latent variables along with conditional mean — genMuXZSd","text":"Generate observed latent variables along conditional mean","code":""},{"path":"/reference/genMuXZSd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate observed and latent variables along with conditional mean — genMuXZSd","text":"","code":"genMuXZSd(   n,   p,   beta,   Sigma,   blocked_dgp_vars,   latent_vars,   block_size,   n_blocks = 1,   snr = NA,   sigma_eps_sq = NA )"},{"path":"/reference/genMuXZSd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate observed and latent variables along with conditional mean — genMuXZSd","text":"n Integer numeric; number observations generate. (generated X Z n rows, generated y mu length n.) p Integer numeric; number observed features (generated X p columns). beta numeric integer vector length p + sig_blocks containing coefficients true model y. Sigma (p + n_blocks) x (p + n_blocks) numeric matrix representing covariance matrix latent features, associated proxies, remaining features. blocked_dgp_vars integer vector length sig_blocks containing indices features corresponding latent features nonzero coefficient beta_high true model y. latent_vars integer vector length n_blocks containing indices latent features. block_size Integer numeric; n_blocks latent variables, X contain block_size noisy proxies correlated latent variable. n_blocks Integer numeric; number latent variables generate, associated observed cluster X. Must least 1. Default 1. snr Integer numeric; signal--noise ratio response y. sigma_eps_sq specified, variance noise y calculated using formula sigma_eps_sq = sum(mu^2)/(n * snr). one snr sigma_eps_sq must specified. Default NA. sigma_eps_sq Integer numeric; variance noise added y. one snr sigma_eps_sq must specified. Default NA.","code":""},{"path":"/reference/genMuXZSd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate observed and latent variables along with conditional mean — genMuXZSd","text":"named list following elements: X n x p numeric matrix containing observed proxies latent variables well observed unblocked (iid) variables. mu length n numeric vector; expected response given X, Z, true coefficient vector (equal y minus added noise). z n x n_blocks numeric matrix containing n_blocks latent variables. Note (X, z) multivariate Gaussian. sd Numeric; standard deviation noise added mu get y (calculated either snr sigma_eps_sq).","code":""},{"path":"/reference/genMuXZSd.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Generate observed and latent variables along with conditional mean — genMuXZSd","text":"Gregory Faletto, Jacob Bien","code":""},{"path":[]},{"path":"/reference/genZmuY.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generates Z, weak signal features in X, noise features in X, mu, and y\nfrom provided parameters — genZmuY","text":"","code":"genZmuY(   n,   p,   k_unclustered,   cluster_size,   n_clusters,   sig_clusters,   beta_latent,   beta_unclustered,   snr,   sigma_eps_sq )"},{"path":"/reference/genZmuY.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generates Z, weak signal features in X, noise features in X, mu, and y\nfrom provided parameters — genZmuY","text":"n Integer numeric; number observations generate. (generated X Z n rows, generated y mu length n.) p Integer numeric; number features generate. generated X p columns. k_unclustered Integer numeric; number features X nonzero coefficients true model y among features generated n_clusters latent variables (called \"weak signal\" features simulations Faletto Bien 2022). coefficients features determined beta_unclustered. Must least 1. cluster_size Integer numeric; n_clusters latent variables, X contain cluster_size noisy proxies correlated latent variable. Must least 2. n_clusters Integer numeric; number latent variables generate, associated observed cluster X. Must least 1. Default 1. sig_clusters Integer numeric; number generated latent features nonzero coefficients true model y (coefficient beta_latent). Must less equal n_clusters. Default 1. beta_latent Integer numeric; coefficient used sig_clusters latent variables nonzero coefficients true model y. equal 0. Default 1.5. beta_unclustered Integer numeric; maximum coefficient model y among k_unclustered features X generated latent variables. coefficients features beta_unclustered/sqrt(1:k_unclustered). equal 0. Default 1. snr Integer numeric; signal--noise ratio response y. sigma_eps_sq specified, variance noise y calculated using formula sigma_eps_sq = sum(mu^2)/(n * snr). one snr sigma_eps_sq must specified. Default NA. sigma_eps_sq Integer numeric; variance noise added y. one snr sigma_eps_sq must specified. Default NA.","code":""},{"path":"/reference/genZmuY.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generates Z, weak signal features in X, noise features in X, mu, and y\nfrom provided parameters — genZmuY","text":"list following elements. Z latent features; either numeric vector (n_clusters > 1) numeric matrix (n_clusters > 1). Note (X, Z) multivariate Gaussian. itemmuA length n numeric vector; expected response given X, Z, true coefficient vector (equal y minus added noise). y length n numeric vector; response generated X, latent features Z, coefficient vector, along additive noise. other_X numeric matrix n observations multivariate normal distribution generated using specified parameters, containing weak signal features noise features eventually X. (missing features proxies latent features Z.) Generates Z, weak signal features X, noise features X, mu, y provided parameters Faletto, G., & Bien, J. (2022). Cluster Stability Selection. arXiv preprint arXiv:2201.00494. https://arxiv.org/abs/2201.00494. Gregory Faletto, Jacob Bien","code":""},{"path":"/reference/getAllClustWeights.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate weights for each cluster member of all of the selected clusters. — getAllClustWeights","title":"Calculate weights for each cluster member of all of the selected clusters. — getAllClustWeights","text":"Calculate weights cluster member selected clusters.","code":""},{"path":"/reference/getAllClustWeights.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate weights for each cluster member of all of the selected clusters. — getAllClustWeights","text":"","code":"getAllClustWeights(css_results, sel_clusters, weighting)"},{"path":"/reference/getAllClustWeights.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate weights for each cluster member of all of the selected clusters. — getAllClustWeights","text":"css_results object class \"cssr\" (output function css). sel_clusters named numeric vector containing selection proportions selected clusters. name entry name corresponding cluster. weighting Character; determines calculate weights individual features within selected clusters. features nonzero weight within selected clusters returned. Must one \"sparse\", \"weighted_avg\", \"simple_avg'. \"sparse\", weight put frequently selected individual cluster member (divided equally among clusters tied top selection proportion tie). \"weighted_avg\", features within selected cluster selected least one subsample nonzero weight. \"simple_avg\", cluster member gets equal weight regardless individual feature selection proportions (, cluster members within selected cluster returned.). See Faletto Bien (2022) details.","code":""},{"path":"/reference/getAllClustWeights.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate weights for each cluster member of all of the selected clusters. — getAllClustWeights","text":"named list length sel_clusters numeric vectors. weights[j] weights use jth selected cluster, name cluster corresponds .","code":""},{"path":"/reference/getAllClustWeights.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Calculate weights for each cluster member of all of the selected clusters. — getAllClustWeights","text":"Gregory Faletto, Jacob Bien","code":""},{"path":"/reference/getClustWeights.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate weights for members of a cluster using selection proportions — getClustWeights","title":"Calculate weights for members of a cluster using selection proportions — getClustWeights","text":"Given cluster features, selection proportions cluster member, specified weighting scheme, calculate appropriate weights cluster.","code":""},{"path":"/reference/getClustWeights.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate weights for members of a cluster using selection proportions — getClustWeights","text":"","code":"getClustWeights(cluster_i, weighting, feat_sel_props)"},{"path":"/reference/getClustWeights.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate weights for members of a cluster using selection proportions — getClustWeights","text":"cluster_i integer vector containing indices members cluster. weighting Character; determines calculate weights individual features within selected clusters. features nonzero weight within selected clusters returned. Must one \"sparse\", \"weighted_avg\", \"simple_avg'. \"sparse\", weight put frequently selected individual cluster member (divided equally among clusters tied top selection proportion tie). \"weighted_avg\", features within selected cluster selected least one subsample nonzero weight. \"simple_avg\", cluster member gets equal weight regardless individual feature selection proportions (, cluster members within selected cluster returned.). See Faletto Bien (2022) details. feat_sel_props numeric vector selection proportions corresponding p features.","code":""},{"path":"/reference/getClustWeights.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate weights for members of a cluster using selection proportions — getClustWeights","text":"numeric vector length cluster_i containing weights corresponding features cluster_i. weights nonnegative sum 1.","code":""},{"path":"/reference/getClustWeights.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Calculate weights for members of a cluster using selection proportions — getClustWeights","text":"Gregory Faletto, Jacob Bien","code":""},{"path":"/reference/getClusterSelMatrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Get cluster selection matrix — getClusterSelMatrix","title":"Get cluster selection matrix — getClusterSelMatrix","text":"Given matrix feature selection indicator variables list clusters features, returns matrix cluster indicator variables.","code":""},{"path":"/reference/getClusterSelMatrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get cluster selection matrix — getClusterSelMatrix","text":"","code":"getClusterSelMatrix(clusters, res)"},{"path":"/reference/getClusterSelMatrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get cluster selection matrix — getClusterSelMatrix","text":"clusters named list entry integer vector indices features common cluster, output formatClusters. (length list clusters equal number clusters.) identified clusters must non-overlapping, features must appear exactly one cluster (unclustered features \"cluster\" size 1). res binary integer matrix. esi, j = 1 feature j selected subsample equals 0 otherwise, output getSelMatrix(). (, row selected set.)","code":""},{"path":"/reference/getClusterSelMatrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get cluster selection matrix — getClusterSelMatrix","text":"binary integer matrix number rows res length(clusters) columns. Entry , j 1 least one member cluster j selected subsample , 0 otherwise.","code":""},{"path":"/reference/getClusterSelMatrix.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Get cluster selection matrix — getClusterSelMatrix","text":"Gregory Faletto, Jacob Bien","code":""},{"path":"/reference/getClusterSelsFromGlmnet.html","id":null,"dir":"Reference","previous_headings":"","what":"Extracts selected clusters and cluster prototypes from the glmnet lasso\noutput — getClusterSelsFromGlmnet","title":"Extracts selected clusters and cluster prototypes from the glmnet lasso\noutput — getClusterSelsFromGlmnet","text":"Extracts selected clusters cluster prototypes glmnet lasso output","code":""},{"path":"/reference/getClusterSelsFromGlmnet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extracts selected clusters and cluster prototypes from the glmnet lasso\noutput — getClusterSelsFromGlmnet","text":"","code":"getClusterSelsFromGlmnet(lasso_sets, clusters, prototypes, feat_names)"},{"path":"/reference/getClusterSelsFromGlmnet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extracts selected clusters and cluster prototypes from the glmnet lasso\noutput — getClusterSelsFromGlmnet","text":"lasso_sets list integer vectors. vector represents set features selected lasso given value penalty parameter lambda. clusters named list entry integer vector indices features common cluster. (length list clusters equal number clusters.) identified clusters must non-overlapping. features appear exactly one cluster (unclustered features must \"cluster\" size 1). prototypes integer vector whose length must equal number clusters. Entry index feature belonging cluster highly correlated y (, prototype cluster, protolasso; see Reid Tibshirani 2016). feat_names Character vector; names features X. (X provided protolasso clusterRepLasso feature names, feat_names NA.)","code":""},{"path":"/reference/getClusterSelsFromGlmnet.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extracts selected clusters and cluster prototypes from the glmnet lasso\noutput — getClusterSelsFromGlmnet","text":"list containing following items: selected_sets list integer vectors. Entry k list contains selected set size k yielded glmnet--member set index single feature cluster selected either protolasso cluster representative lasso (prototype cluster--cluster member highly correlated y). (set size k selected, entry k NULL.) selected_clusts_list list lists; entry k list list length k clusters (clusters selected cluster representative lasso). , set size k selected, entry k NULL.","code":""},{"path":"/reference/getClusterSelsFromGlmnet.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Extracts selected clusters and cluster prototypes from the glmnet lasso\noutput — getClusterSelsFromGlmnet","text":"Reid, S., & Tibshirani, R. (2016). Sparse regression marginal testing using cluster prototypes. Biostatistics, 17(2), 364–376. https://doi.org/10.1093/biostatistics/kxv049.  Bühlmann, P., Rütimann, P., van de Geer, S., & Zhang, C. H. (2013). Correlated variables regression: Clustering sparse estimation. Journal Statistical Planning Inference, 143(11), 1835–1858. https://doi.org/10.1016/j.jspi.2013.05.019.","code":""},{"path":"/reference/getClusterSelsFromGlmnet.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Extracts selected clusters and cluster prototypes from the glmnet lasso\noutput — getClusterSelsFromGlmnet","text":"Gregory Faletto, Jacob Bien","code":""},{"path":"/reference/getCssDesign.html","id":null,"dir":"Reference","previous_headings":"","what":"Obtain a design matrix of cluster representatives — getCssDesign","title":"Obtain a design matrix of cluster representatives — getCssDesign","text":"Takes matrix observations original feature space returns matrix representatives selected clusters based results cluster stability selection.","code":""},{"path":"/reference/getCssDesign.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Obtain a design matrix of cluster representatives — getCssDesign","text":"","code":"getCssDesign(   css_results,   newX = NA,   weighting = \"weighted_avg\",   cutoff = 0,   min_num_clusts = 1,   max_num_clusts = NA )"},{"path":"/reference/getCssDesign.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Obtain a design matrix of cluster representatives — getCssDesign","text":"css_results object class \"cssr\" (output function css). newX numeric matrix (preferably) data.frame (coerced internally matrix function model.matrix) containing data used generate design matrix cluster representatives. Must contain features (number columns) X matrix provided css, columns newX labeled, names must match variable names provided css. newX may omitted train_inds provided css set aside observations model estimation. case, newX omitted getCssDesign return design matrix cluster representatives formed train_inds observations matrix X provided css. (train_inds provided css, newX must provided getCssDesign.) Default NA. weighting Character; determines calculate weights combine features selected clusters weighted averages, called cluster representatives. Must one \"sparse\", \"weighted_avg\", \"simple_avg'. \"sparse\", weight put frequently selected individual cluster member (divided equally among clusters tied top selection proportion tie). \"weighted_avg\", weight used cluster member calculated proportion individual selection proportions feature. \"simple_avg\", cluster member gets equal weight regardless individual feature selection proportions (, cluster representative just simple average cluster members). See Faletto Bien (2022) details. Default \"weighted_avg\". cutoff Numeric; getCssDesign include clusters selection proportions equal least cutoff. Must 0 1. Default 0 (case either clusters used, max_num_clusts used, max_num_clusts specified). min_num_clusts Integer numeric; minimum number clusters use regardless cutoff. (, chosen cutoff returns fewer min_num_clusts clusters, cutoff increased least min_num_clusts clusters selected.) Default 1. max_num_clusts Integer numeric; maximum number clusters use regardless cutoff. (, chosen cutoff returns max_num_clusts clusters, cutoff decreased max_num_clusts clusters selected.) Default NA (case max_num_clusts ignored).","code":""},{"path":"/reference/getCssDesign.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Obtain a design matrix of cluster representatives — getCssDesign","text":"design matrix either nrow(newX) (length(train_inds), train_inds provided css newX provided getCssDesign) observations number columns equal number selected clusters, containing cluster representatives cluster.","code":""},{"path":"/reference/getCssDesign.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Obtain a design matrix of cluster representatives — getCssDesign","text":"Gregory Faletto, Jacob Bien","code":""},{"path":"/reference/getCssPreds.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit model and generate predictions from new data — getCssPreds","title":"Fit model and generate predictions from new data — getCssPreds","text":"Generate predictions test data using cluster stability-selected model.","code":""},{"path":"/reference/getCssPreds.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit model and generate predictions from new data — getCssPreds","text":"","code":"getCssPreds(   css_results,   testX,   weighting = \"weighted_avg\",   cutoff = 0,   min_num_clusts = 1,   max_num_clusts = NA,   trainX = NA,   trainY = NA )"},{"path":"/reference/getCssPreds.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit model and generate predictions from new data — getCssPreds","text":"css_results object class \"cssr\" (output function css). testX numeric matrix (preferably) data.frame (coerced internally matrix function model.matrix) containing data used generate predictions. Must contain features (number columns) matrix provided css, columns testX labeled, names must match variable names provided css. weighting Character; determines calculate weights combine features selected clusters weighted averages, called cluster representatives. Must one \"sparse\", \"weighted_avg\", \"simple_avg'. \"sparse\", weight put frequently selected individual cluster member (divided equally among clusters tied top selection proportion tie). \"weighted_avg\", weight used cluster member calculated proportion individual selection proportions feature. \"simple_avg\", cluster member gets equal weight regardless individual feature selection proportions (, cluster representative just simple average cluster members). See Faletto Bien (2022) details. Default \"weighted_avg\". cutoff Numeric; getCssPreds make use clusters selection proportions equal least cutoff. Must 0 1. Default 0 (case either clusters used, max_num_clusts used, max_num_clusts specified). min_num_clusts Integer numeric; minimum number clusters use regardless cutoff. (, chosen cutoff returns fewer min_num_clusts clusters, cutoff increased least min_num_clusts clusters selected.) Default 1. max_num_clusts Integer numeric; maximum number clusters use regardless cutoff. (, chosen cutoff returns max_num_clusts clusters, cutoff decreased max_num_clusts clusters selected.) Default NA (case max_num_clusts ignored). trainX numeric matrix (preferably) data.frame (coerced internally matrix function model.matrix) containing data used estimate linear model selected clusters. trainX necessary provide train_inds designated css function call set aside observations model estimation (though even train_inds provided, trainX trianY used model estimation provided getCssPreds). Must contain features (number columns) matrix provided css, columns trainX labeled, names must match variable names provided css. Default NA (case getCssPreds uses observations train_inds provided css estimate linear model). trainY response corresponding trainX. Must real-valued response (unlike general css setup) predictions generated ordinary least squares model. Must length number rows trainX. Like trainX, needs provided observations set aside model estimation parameter train_inds css function call. Default NA (case getCssPreds uses observations train_inds provided css).","code":""},{"path":"/reference/getCssPreds.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fit model and generate predictions from new data — getCssPreds","text":"vector predictions corresponding observations testX.","code":""},{"path":"/reference/getCssPreds.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Fit model and generate predictions from new data — getCssPreds","text":"Faletto, G., & Bien, J. (2022). Cluster Stability Selection. arXiv preprint arXiv:2201.00494. https://arxiv.org/abs/2201.00494.","code":""},{"path":"/reference/getCssPreds.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Fit model and generate predictions from new data — getCssPreds","text":"Gregory Faletto, Jacob Bien","code":""},{"path":"/reference/getCssSelections.html","id":null,"dir":"Reference","previous_headings":"","what":"Obtain a selected set of clusters and features — getCssSelections","title":"Obtain a selected set of clusters and features — getCssSelections","text":"Generate sets selected clusters features cluster stability selection.","code":""},{"path":"/reference/getCssSelections.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Obtain a selected set of clusters and features — getCssSelections","text":"","code":"getCssSelections(   css_results,   weighting = \"sparse\",   cutoff = 0,   min_num_clusts = 1,   max_num_clusts = NA )"},{"path":"/reference/getCssSelections.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Obtain a selected set of clusters and features — getCssSelections","text":"css_results object class \"cssr\" (output function css). weighting Character; determines calculate weights individual features within selected clusters. features nonzero weight within selected clusters returned. Must one \"sparse\", \"weighted_avg\", \"simple_avg'. \"sparse\", weight put frequently selected individual cluster member (divided equally among clusters tied top selection proportion tie). \"weighted_avg\", features within selected cluster selected least one subsample nonzero weight. \"simple_avg\", cluster member gets equal weight regardless individual feature selection proportions (, cluster members within selected cluster returned.). See Faletto Bien (2022) details. Default \"sparse\". cutoff Numeric; getCssSelections select return clusters selection proportions equal least cutoff. Must 0 1. Default 0 (case either clusters selected, max_num_clusts selected, max_num_clusts specified). min_num_clusts Integer numeric; minimum number clusters use regardless cutoff. (, chosen cutoff returns fewer min_num_clusts clusters, cutoff increased least min_num_clusts clusters selected.) Default 1. max_num_clusts Integer numeric; maximum number clusters use regardless cutoff. (, chosen cutoff returns max_num_clusts clusters, cutoff decreased max_num_clusts clusters selected.) Default NA (case max_num_clusts ignored).","code":""},{"path":"/reference/getCssSelections.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Obtain a selected set of clusters and features — getCssSelections","text":"named list two items. selected_clusts named list integer vectors; vector contains indices features one selected clusters. selected_feats named integer vector; indices features nonzero weights selected clusters.","code":""},{"path":"/reference/getCssSelections.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Obtain a selected set of clusters and features — getCssSelections","text":"Faletto, G., & Bien, J. (2022). Cluster Stability Selection. arXiv preprint arXiv:2201.00494. https://arxiv.org/abs/2201.00494.","code":""},{"path":"/reference/getCssSelections.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Obtain a selected set of clusters and features — getCssSelections","text":"Gregory Faletto, Jacob Bien","code":""},{"path":"/reference/getLassoLambda.html","id":null,"dir":"Reference","previous_headings":"","what":"Get lambda value for lasso — getLassoLambda","title":"Get lambda value for lasso — getLassoLambda","text":"Chooses lambda value lasso used subsample size n/2 (cluster stability selection) cross-validation.","code":""},{"path":"/reference/getLassoLambda.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get lambda value for lasso — getLassoLambda","text":"","code":"getLassoLambda(X, y, lambda_choice = \"1se\", nfolds = 10)"},{"path":"/reference/getLassoLambda.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get lambda value for lasso — getLassoLambda","text":"X n x p numeric matrix (preferably) data.frame (coerced internally matrix function model.matrix) containing p >= 2 features/predictors used cluster stability selection. y response; n-dimensional numeric integer vector. (Unlike general css setup, response must real-valued since lambda determined using lasso cross-validation.) lambda_choice Character; either \"min\" \"1se\". \"min\", chooses lambda minimizes cross-validated error; \"1se\", chooses largest lambda within one standard error minimum error lambda (resulting smaller selected set, may desirable model size corresponding minimum error lambda tends larger optimal. See, example, Bühlmann Meinshausen 2006, Prop. 1 Bühlmann van de Geer 2011, Section 2.5.1.). Default \"1se\". nfolds Numeric integer; number folds cross-validation. Must least 4 (specified cv.glmnet). Default 10.","code":""},{"path":"/reference/getLassoLambda.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get lambda value for lasso — getLassoLambda","text":"numeric; selected value lambda.","code":""},{"path":"/reference/getLassoLambda.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Get lambda value for lasso — getLassoLambda","text":"Bühlmann, P., & Meinshausen, N. (2006). High-Dimensional Graphs Variable Selection Lasso. Annals Statistics, 34(3), 1436–1462. https://doi.org/10.1214/009053606000000281.  Peter Bühlmann Sara van de Geer. Statistics High-Dimensional Data. Springer Series Statistics. Springer, Heidelberg, 2011. ISBN 978-3-642-20191-2. http://dx.doi.org/10.1007/978-3-642-20192-9.  Jerome Friedman, Trevor Hastie, Robert Tibshirani (2010). Regularization Paths Generalized Linear Models via Coordinate Descent. Journal Statistical Software, 33(1), 1-22. URL https://www.jstatsoft.org/v33/i01/.","code":""},{"path":"/reference/getLassoLambda.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Get lambda value for lasso — getLassoLambda","text":"Gregory Faletto, Jacob Bien","code":""},{"path":"/reference/getModelSize.html","id":null,"dir":"Reference","previous_headings":"","what":"Automated estimation of model size — getModelSize","title":"Automated estimation of model size — getModelSize","text":"function uses lasso cross-validation estimate model size. using lasso, cluster features dropped X except one feature highest marginal correlation y, protolasso (Reid Tibshirani 2016).","code":""},{"path":"/reference/getModelSize.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Automated estimation of model size — getModelSize","text":"","code":"getModelSize(X, y, clusters)"},{"path":"/reference/getModelSize.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Automated estimation of model size — getModelSize","text":"X n x p numeric matrix (preferably) data.frame (coerced internally matrix function model.matrix) containing p >= 2 features/predictors. y length-n numeric vector containing responses; y[] response corresponding observation X[, ]. (Note css function, y numeric response, function, underlying selection procedure lasso, y must real-valued response.) clusters named list entry integer vector indices features common cluster, output css. (length list clusters equal number clusters.) identified clusters must non-overlapping, features must appear exactly one cluster (unclustered features \"cluster\" size 1). CAUTION: provided X data.frame contains categorical feature two levels, resulting matrix made model.matrix different number columns provided data.frame, feature numbers change, clusters argument work properly (current version package). get correct results case, please use model.matrix convert data.frame numeric matrix , provide matrix cluster assignments respect matrix.","code":""},{"path":"/reference/getModelSize.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Automated estimation of model size — getModelSize","text":"integer; estimated size model. minimum returned value 1, even lasso cross-validation chose features.","code":""},{"path":"/reference/getModelSize.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Automated estimation of model size — getModelSize","text":"Reid, S., & Tibshirani, R. (2016). Sparse regression marginal testing using cluster prototypes. Biostatistics, 17(2), 364–376. https://doi.org/10.1093/biostatistics/kxv049.","code":""},{"path":"/reference/getModelSize.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Automated estimation of model size — getModelSize","text":"Gregory Faletto, Jacob Bien","code":""},{"path":"/reference/getNoiseVar.html","id":null,"dir":"Reference","previous_headings":"","what":"Get variance of noise to add to Z in order to yield proxies X with desired\ncorrelations — getNoiseVar","title":"Get variance of noise to add to Z in order to yield proxies X with desired\ncorrelations — getNoiseVar","text":"Get variance noise add Z order yield proxies X desired correlations","code":""},{"path":"/reference/getNoiseVar.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get variance of noise to add to Z in order to yield proxies X with desired\ncorrelations — getNoiseVar","text":"","code":"getNoiseVar(cor)"},{"path":"/reference/getNoiseVar.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get variance of noise to add to Z in order to yield proxies X with desired\ncorrelations — getNoiseVar","text":"cor numeric vector desired correlations proxy Z. Note: correlations must positive.","code":""},{"path":"/reference/getNoiseVar.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get variance of noise to add to Z in order to yield proxies X with desired\ncorrelations — getNoiseVar","text":"vector variances independent Gaussian random variables add Z order yield proxies desired correlations Z.","code":""},{"path":"/reference/getNoiseVar.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Get variance of noise to add to Z in order to yield proxies X with desired\ncorrelations — getNoiseVar","text":"Gregory Faletto, Jacob Bien","code":""},{"path":"/reference/getPrototypes.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate prototypes from a list of clusters — getPrototypes","title":"Estimate prototypes from a list of clusters — getPrototypes","text":"Takes list clusters, x, y returns integer vector (length equal number clusters) indices feature prototypes (features cluster correlated response).","code":""},{"path":"/reference/getPrototypes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate prototypes from a list of clusters — getPrototypes","text":"","code":"getPrototypes(clusters, x, y)"},{"path":"/reference/getPrototypes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate prototypes from a list of clusters — getPrototypes","text":"clusters list entry integer vector indices features common cluster. (length list clusters must equal number clusters.) identified clusters must non-overlapping. Must include clusters size 2 larger. x n x p numeric matrix; design matrix. y Numeric response vector. Note: general, css function require y numeric vector, provided fitfun use different form y (example, categorical response variable). However, y must numeric order provide prototypes prototypes determined using correlation cluster members (columns x) y.","code":""},{"path":"/reference/getPrototypes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate prototypes from a list of clusters — getPrototypes","text":"integer vector length clusters. Entry j index feature identified prototype cluster j.","code":""},{"path":"/reference/getPrototypes.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Estimate prototypes from a list of clusters — getPrototypes","text":"Gregory Faletto, Jacob Bien","code":""},{"path":"/reference/getSelMatrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Generates matrix of selection indicators from stability selection. — getSelMatrix","title":"Generates matrix of selection indicators from stability selection. — getSelMatrix","text":"Generates matrix selection indicators stability selection.","code":""},{"path":"/reference/getSelMatrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generates matrix of selection indicators from stability selection. — getSelMatrix","text":"","code":"getSelMatrix(   x,   y,   lambda,   B,   sampling_type,   subsamps_object,   num_cores,   fitfun = cssLasso )"},{"path":"/reference/getSelMatrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generates matrix of selection indicators from stability selection. — getSelMatrix","text":"x n x p numeric matrix data.frame containing predictors. y response vector; can response takes form length n vector used (used) fitfun. Typically (default fitfun = cssLasso), y n-dimensional numeric vector containing response. lambda tuning parameter set tuning parameters may used feature selection method fitfun. default case fitfun = cssLasso, lambda numeric: penalty use lasso fit. (css() require lambda particular object user-specified feature selection method fitfun, lambda can arbitrary object. See description fitfun .) B Integer numeric; number subsamples. Note: sampling_type==\"MB\" total number subsamples B; sampling_type=\"SS\" number subsamples 2*B. Default 100 sampling_type=\"MB\" 50 sampling_type=\"SS\". sampling_type character vector; either \"SS\" \"MB\". \"MB\", B subsamples drawn randomly (proposed Meinshausen Bühlmann 2010). \"SS\", addition B subsamples, B complementary pair subsamples drawn well (see Faletto Bien 2022 Shah Samworth 2013 details). Default \"SS\", \"MB\" supported yet. subsamps_object list length B (2*B sampling_type=\"SS\"), element one following: subsampleAn integer vector size n/2 containing indices observations subsample. drop_var_inputA named list containing two elements: one named \"subsample\", matching previous description, logical vector named \"feats_to_keep\" containing indices features automatically selected. (first object output function createSubsamples provided prop_feats_remove 0, default, second object output createSubsamples prop_feats_remove > 0.) num_cores Optional; integer. using parallel processing, number cores use parallel processing (num_cores supplied internally mc.cores argument parallel::mclapply). fitfun function; feature selection function used subsample cluster stability selection. can feature selection method; requirement accepts arguments (arguments) X, y, lambda returns integer vector subset 1:p. example, fitfun best subset selection forward stepwise selection LARS lambda desired model size; fitfun elastic net lambda length-two vector specifying lambda alpha. Default cssLasso, implementation lasso (relying R package glmnet), lambda must positive numeric specifying L1 penalty lasso.","code":""},{"path":"/reference/getSelMatrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generates matrix of selection indicators from stability selection. — getSelMatrix","text":"binary integer matrix dimension B x p (sampling_type == \"MB\") 2*B x p (sampling_type == \"SS\"). resi, j = 1 feature j selected subsample equals 0 otherwise. (, row selected set.)","code":""},{"path":"/reference/getSelMatrix.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Generates matrix of selection indicators from stability selection. — getSelMatrix","text":"Gregory Faletto, Jacob Bien","code":""},{"path":"/reference/getSelectedClusters.html","id":null,"dir":"Reference","previous_headings":"","what":"From css output, obtain names of selected clusters and selection proportions,\nindices of all selected features, and weights of individual cluster members — getSelectedClusters","title":"From css output, obtain names of selected clusters and selection proportions,\nindices of all selected features, and weights of individual cluster members — getSelectedClusters","text":"cutoff high least min_num_clusts clusters selected, lowered min_num_clusts can selected. , cutoff low max_num_clusts selected, cutoff increased max_num_clusts selected. Note clusters can tied selection proportions, possible number selected clusters strictly lower max_num_clusts strictly greater min_num_clusts. fact, possible cutoffs able satisfied simulteaneously, even strictly positive difference max_num_clusts min_num_clusts. occurs, max_num_clusts take precedence min_num_clusts. getSelectedClusters throw error provided inputs allow select clusters.","code":""},{"path":"/reference/getSelectedClusters.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"From css output, obtain names of selected clusters and selection proportions,\nindices of all selected features, and weights of individual cluster members — getSelectedClusters","text":"","code":"getSelectedClusters(   css_results,   weighting,   cutoff,   min_num_clusts,   max_num_clusts )"},{"path":"/reference/getSelectedClusters.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"From css output, obtain names of selected clusters and selection proportions,\nindices of all selected features, and weights of individual cluster members — getSelectedClusters","text":"css_results object class \"cssr\" (output function css). weighting Character; determines calculate weights individual features within selected clusters. features nonzero weight within selected clusters returned. Must one \"sparse\", \"weighted_avg\", \"simple_avg'. \"sparse\", weight put frequently selected individual cluster member (divided equally among clusters tied top selection proportion tie). \"weighted_avg\", features within selected cluster selected least one subsample nonzero weight. \"simple_avg\", cluster member gets equal weight regardless individual feature selection proportions (, cluster members within selected cluster returned.). See Faletto Bien (2022) details. cutoff Numeric; getCssSelections select return clusters selection proportions equal least cutoff. Must 0 1. min_num_clusts Integer numeric; minimum number clusters use regardless cutoff. (, chosen cutoff returns fewer min_num_clusts clusters, cutoff increased least min_num_clusts clusters selected.) max_num_clusts Integer numeric; maximum number clusters use regardless cutoff. (, chosen cutoff returns max_num_clusts clusters, cutoff decreased max_num_clusts clusters selected.) NA, max_num_clusts ignored.","code":""},{"path":"/reference/getSelectedClusters.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"From css output, obtain names of selected clusters and selection proportions,\nindices of all selected features, and weights of individual cluster members — getSelectedClusters","text":"named list following elements: selected_clusts named numeric vector containing selection proportions selected clusters. name entry name corresponding cluster. selected_feats named integer vector; indices features nonzero weights selected clusters. weights named list length number selected clusters. list element weights[j] numeric vector weights use jth selected cluster, name cluster corresponds .","code":""},{"path":"/reference/getSelectedClusters.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"From css output, obtain names of selected clusters and selection proportions,\nindices of all selected features, and weights of individual cluster members — getSelectedClusters","text":"Gregory Faletto, Jacob Bien","code":""},{"path":"/reference/getSelectedSets.html","id":null,"dir":"Reference","previous_headings":"","what":"Converts a selected set from X_glmnet to selected sets and selected clusters\nfrom the original feature space of X. — getSelectedSets","title":"Converts a selected set from X_glmnet to selected sets and selected clusters\nfrom the original feature space of X. — getSelectedSets","text":"Converts selected set X_glmnet selected sets selected clusters original feature space X.","code":""},{"path":"/reference/getSelectedSets.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Converts a selected set from X_glmnet to selected sets and selected clusters\nfrom the original feature space of X. — getSelectedSets","text":"","code":"getSelectedSets(lasso_set, clusters, prototypes, feat_names)"},{"path":"/reference/getSelectedSets.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Converts a selected set from X_glmnet to selected sets and selected clusters\nfrom the original feature space of X. — getSelectedSets","text":"lasso_set vector containing indices selected cluster representatives prototypes. clusters named list entry integer vector indices features common cluster. (length list clusters equal number clusters.) identified clusters must non-overlapping. features appear exactly one cluster (unclustered features must \"cluster\" size 1). prototypes integer vector whose length must equal number clusters. Entry index feature belonging cluster highly correlated y (, prototype cluster, protolasso). feat_names Character vector; names features X.","code":""},{"path":"/reference/getSelectedSets.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Converts a selected set from X_glmnet to selected sets and selected clusters\nfrom the original feature space of X. — getSelectedSets","text":"list containing two items: selected_set integer vector length equal lasso_set containing set selected features original X matrix. (Selections lasso_set corresponding cluster replaced cluster's prototype X.) selected_clusts_list named list integer vectors length equal selected_set. selected_clusts_list[k] integer vector containing indices features X cluster containing prototype selected_setk.","code":""},{"path":"/reference/getSelectedSets.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Converts a selected set from X_glmnet to selected sets and selected clusters\nfrom the original feature space of X. — getSelectedSets","text":"Gregory Faletto, Jacob Bien","code":""},{"path":"/reference/getSelectionPrototypes.html","id":null,"dir":"Reference","previous_headings":"","what":"Identify selection prototypes from selected clusters — getSelectionPrototypes","title":"Identify selection prototypes from selected clusters — getSelectionPrototypes","text":"Takes list selected clusters returns integer vector indices features frequently selected cluster","code":""},{"path":"/reference/getSelectionPrototypes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Identify selection prototypes from selected clusters — getSelectionPrototypes","text":"","code":"getSelectionPrototypes(css_results, selected_clusts)"},{"path":"/reference/getSelectionPrototypes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Identify selection prototypes from selected clusters — getSelectionPrototypes","text":"css_results object class \"cssr\" (output function css). selected_clusts list integer vectors; vector must contain indices features cluster.","code":""},{"path":"/reference/getSelectionPrototypes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Identify selection prototypes from selected clusters — getSelectionPrototypes","text":"integer vector (length equal number clusters) indices feature prototypes (features cluster selected often individually base method cluster stability selection). case tie, tie broken choosing feature correlated response full data set provided css.","code":""},{"path":"/reference/getSelectionPrototypes.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Identify selection prototypes from selected clusters — getSelectionPrototypes","text":"Gregory Faletto, Jacob Bien","code":""},{"path":"/reference/getSubsamps.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate list of subsamples — getSubsamps","title":"Generate list of subsamples — getSubsamps","text":"Generate list subsamples","code":""},{"path":"/reference/getSubsamps.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate list of subsamples — getSubsamps","text":"","code":"getSubsamps(n, B, sampling_type)"},{"path":"/reference/getSubsamps.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate list of subsamples — getSubsamps","text":"n Integer numeric; sample size data set. B Integer numeric; number subsamples. Note: sampling_type==\"MB\" total number subsamples B; sampling_type=\"SS\" number subsamples 2*B. Default 100 sampling_type=\"MB\" 50 sampling_type=\"SS\". sampling_type character vector; either \"SS\" \"MB\". \"MB\", B subsamples drawn randomly (proposed Meinshausen Bühlmann 2010). \"SS\", addition B subsamples, B complementary pair subsamples drawn well (see Faletto Bien 2022 Shah Samworth 2013 details). Default \"SS\", \"MB\" supported yet.","code":""},{"path":"/reference/getSubsamps.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate list of subsamples — getSubsamps","text":"list length B (2*B sampling_type=\"SS\"), element integer vector length floor(n/2) containing indices subsample 1:n. sampling_type==\"SS\", last B subsamples complementary pairs first B subsamples (see Faletto Bien 2022 Shah Samworth 2013 details).","code":""},{"path":"/reference/getSubsamps.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Generate list of subsamples — getSubsamps","text":"Faletto, G., & Bien, J. (2022). Cluster Stability Selection. arXiv preprint arXiv:2201.00494. https://arxiv.org/abs/2201.00494. Shah, R. D., & Samworth, R. J. (2013). Variable selection error control: Another look stability selection. Journal Royal Statistical Society. Series B: Statistical Methodology, 75(1), 55–80. https://doi.org/10.1109/RITA.2014.2302071.","code":""},{"path":"/reference/getSubsamps.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Generate list of subsamples — getSubsamps","text":"Gregory Faletto, Jacob Bien","code":""},{"path":"/reference/getXglmnet.html","id":null,"dir":"Reference","previous_headings":"","what":"Converts the provided design matrix to an appropriate format for either the\nprotolasso or the cluster representative lasso. — getXglmnet","title":"Converts the provided design matrix to an appropriate format for either the\nprotolasso or the cluster representative lasso. — getXglmnet","text":"Creates design matrix glmnet dealing clusters (type=\"protolasso\", discards cluster members except prototype; type=\"clusterRepLasso\", replaces cluster members simple average cluster members).","code":""},{"path":"/reference/getXglmnet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Converts the provided design matrix to an appropriate format for either the\nprotolasso or the cluster representative lasso. — getXglmnet","text":"","code":"getXglmnet(x, clusters, type, prototypes = NA)"},{"path":"/reference/getXglmnet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Converts the provided design matrix to an appropriate format for either the\nprotolasso or the cluster representative lasso. — getXglmnet","text":"x numeric matrix; provided matrix n observations p features. clusters named list entry integer vector indices features common cluster. (length list clusters equal number clusters.) identified clusters non-overlapping. features appear exactly one cluster (unclustered features put \"cluster\" size 1). type Character; \"protolasso\" protolasso \"clusterRepLasso\" cluster representative lasso. prototypes required type \"protolasso\". integer vector whose length equal number clusters. Entry prototype cluster (feature belonging cluster highly correlated y; see Reid Tibshirani 2016).","code":""},{"path":"/reference/getXglmnet.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Converts the provided design matrix to an appropriate format for either the\nprotolasso or the cluster representative lasso. — getXglmnet","text":"numeric matrix; design matrix required protolasso cluster representative lasso, prepared input glmnet.","code":""},{"path":"/reference/getXglmnet.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Converts the provided design matrix to an appropriate format for either the\nprotolasso or the cluster representative lasso. — getXglmnet","text":"Reid, S., & Tibshirani, R. (2016). Sparse regression marginal testing using cluster prototypes. Biostatistics, 17(2), 364–376. https://doi.org/10.1093/biostatistics/kxv049.","code":""},{"path":"/reference/getXglmnet.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Converts the provided design matrix to an appropriate format for either the\nprotolasso or the cluster representative lasso. — getXglmnet","text":"Gregory Faletto, Jacob Bien","code":""},{"path":"/reference/identifyPrototype.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate prototypes from a single cluster — identifyPrototype","title":"Estimate prototypes from a single cluster — identifyPrototype","text":"Takes single cluster, x, y returns integer index feature prototype (feature cluster correlated response).","code":""},{"path":"/reference/identifyPrototype.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate prototypes from a single cluster — identifyPrototype","text":"","code":"identifyPrototype(cluster_members_i, x, y)"},{"path":"/reference/identifyPrototype.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate prototypes from a single cluster — identifyPrototype","text":"cluster_members_i integer vector indices features common cluster. Must length least 2. x n x p numeric matrix; design matrix. y Numeric response vector. Note: general, css function require y numeric vector, provided fitfun use different form y (example, categorical response variable). However, y must numeric order provide prototypes prototypes determined using correlation cluster members (columns x) y.","code":""},{"path":"/reference/identifyPrototype.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate prototypes from a single cluster — identifyPrototype","text":"integer; index feature identified prototype cluster.","code":""},{"path":"/reference/identifyPrototype.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Estimate prototypes from a single cluster — identifyPrototype","text":"Gregory Faletto, Jacob Bien","code":""},{"path":"/reference/makeCoefficients.html","id":null,"dir":"Reference","previous_headings":"","what":"Generated coefficients for y in latent variable model — makeCoefficients","title":"Generated coefficients for y in latent variable model — makeCoefficients","text":"Generated coefficients y latent variable model","code":""},{"path":"/reference/makeCoefficients.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generated coefficients for y in latent variable model — makeCoefficients","text":"","code":"makeCoefficients(   p,   k_unblocked,   beta_low,   beta_high,   nblocks,   sig_blocks,   block_size )"},{"path":"/reference/makeCoefficients.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generated coefficients for y in latent variable model — makeCoefficients","text":"p Integer numeric; number features observed x plus number latent variables (corresponding cluster). k_unblocked Integer numeric; number features X nonzero coefficients true model y among features generated n_clusters latent variables (called \"weak signal\" features simulations Faletto Bien 2022). coefficients features determined beta_low. beta_low Integer numeric; maximum coefficient model y among k_unblocked features X generated latent variables. coefficients features beta_low/sqrt(1:k_unblocked). beta_high Integer numeric; coefficient used sig_blocks latent variables nonzero coefficients true model y. nblocks Integer numeric; number latent variables generated, associated observed cluster X. sig_blocks Integer numeric; number generated latent features nonzero coefficients true model y (coefficient beta_latent). particular, first sig_blocks latent variables coefficient beta_latent, remaining nblocks sig_blocks features coefficient 0. Must less equal n_clusters. block_size Integer numeric; n_blocks latent variables, covariance matrix include original latent feature plus block_size - 1 noisy proxies correlated latent variable.","code":""},{"path":"/reference/makeCoefficients.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generated coefficients for y in latent variable model — makeCoefficients","text":"named list following elements: beta vector length p containing coefficients true model y. entries equal 0 except sig_blocks latent variables coefficient beta_high k_unblocked independent features coefficient determined beta_low. blocked_dgp_vars integer vector length sig_blocks containing indices features corresponding latent features nonzero coefficient beta_high true model y. sig_unblocked_vars integer vector length k_unblocked containing indices observed features independent blocked features coefficient beta_low true model y. k_unblocked = 0, just NA. insig_blocked_vars integer vector containing indices features corresponding latent features coefficient 0 true model y. nblocks=0, just NA. latent_vars integer vector length nblocks containing indices latent features.","code":""},{"path":"/reference/makeCoefficients.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Generated coefficients for y in latent variable model — makeCoefficients","text":"Faletto, G., & Bien, J. (2022). Cluster Stability Selection. arXiv preprint arXiv:2201.00494. https://arxiv.org/abs/2201.00494.","code":""},{"path":"/reference/makeCoefficients.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Generated coefficients for y in latent variable model — makeCoefficients","text":"Gregory Faletto, Jacob Bien","code":""},{"path":"/reference/makeCovarianceMatrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate covariance matrix for simulated clustered data — makeCovarianceMatrix","title":"Generate covariance matrix for simulated clustered data — makeCovarianceMatrix","text":"Generate covariance matrix simulated clustered data","code":""},{"path":"/reference/makeCovarianceMatrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate covariance matrix for simulated clustered data — makeCovarianceMatrix","text":"","code":"makeCovarianceMatrix(p, nblocks, block_size, rho, var)"},{"path":"/reference/makeCovarianceMatrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate covariance matrix for simulated clustered data — makeCovarianceMatrix","text":"p Integer numeric; total number features covariance matrix created, including latent features, associated noisy proxies latent feature, (weak signal noise) features. block_size Integer numeric; n_blocks latent variables, covariance matrix include original latent feature plus block_size - 1 noisy proxies correlated latent variable. rho Integer numeric; covariance proxies cluster latent variable (). Note correlation features cluster rho/var. rho equal 0. var Integer numeric; variance observed features X (proxies latent variables k_unclustered features). var equal 0. n_blocks Integer numeric; number latent variables data, associated observed cluster X. Must least 1.","code":""},{"path":"/reference/makeCovarianceMatrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate covariance matrix for simulated clustered data — makeCovarianceMatrix","text":"p x p numeric matrix representing covariance matrix latent features, associated proxies, remaining features. features block independent blocks variance var.","code":""},{"path":"/reference/makeCovarianceMatrix.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Generate covariance matrix for simulated clustered data — makeCovarianceMatrix","text":"Gregory Faletto, Jacob Bien","code":""},{"path":"/reference/makeCovarianceMatrixWeighted.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate covariance matrix for simulated clustered data — makeCovarianceMatrixWeighted","title":"Generate covariance matrix for simulated clustered data — makeCovarianceMatrixWeighted","text":"Generate covariance matrix simulated clustered data","code":""},{"path":"/reference/makeCovarianceMatrixWeighted.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate covariance matrix for simulated clustered data — makeCovarianceMatrixWeighted","text":"","code":"makeCovarianceMatrixWeighted(   p,   nblocks,   block_size,   n_strong_block_vars,   rho_high,   rho_low,   var )"},{"path":"/reference/makeCovarianceMatrixWeighted.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate covariance matrix for simulated clustered data — makeCovarianceMatrixWeighted","text":"p Integer numeric; total number features covariance matrix created, including latent features, associated noisy proxies latent feature, (weak signal noise) features. block_size Integer numeric; n_blocks latent variables, covariance matrix include original latent feature plus block_size - 1 noisy proxies correlated latent variable. n_strong_block_vars Integer numeric; number proxies high covariance (rho_high) corresponding latent features. (remaining block_size - n_strong_block_vars cluster members covariance rho_low latent feature.) rho_high Integer numeric; covariance \"strong proxies\" cluster latent variable (). Note correlation \"strong proxy\" features cluster rho_high/var. rho_high equal 0 must least large rho_low. rho_low Integer numeric; covariance \"weak proxies\" cluster latent variable (). Note correlation \"weak proxy\" features cluster rho_low/var. rho_low equal 0 must larger rho_high. var Integer numeric; variance observed features X (proxies latent variables k_unclustered features). var equal 0. n_blocks Integer numeric; number latent variables data, associated observed cluster X. Must least 1.","code":""},{"path":"/reference/makeCovarianceMatrixWeighted.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate covariance matrix for simulated clustered data — makeCovarianceMatrixWeighted","text":"p x p numeric matrix representing covariance matrix latent features, associated proxies, remaining features. features block independent blocks variance var.","code":""},{"path":"/reference/makeCovarianceMatrixWeighted.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Generate covariance matrix for simulated clustered data — makeCovarianceMatrixWeighted","text":"Gregory Faletto, Jacob Bien","code":""},{"path":"/reference/print.cssr.html","id":null,"dir":"Reference","previous_headings":"","what":"Print cluster stability selection output — print.cssr","title":"Print cluster stability selection output — print.cssr","text":"Print summary information css function (using output printCssDf function).","code":""},{"path":"/reference/print.cssr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print cluster stability selection output — print.cssr","text":"","code":"# S3 method for cssr print(x, cutoff = 0, min_num_clusts = 1, max_num_clusts = NA, ...)"},{"path":"/reference/print.cssr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print cluster stability selection output — print.cssr","text":"x object class \"cssr\" (output function css). cutoff Numeric; print.cssr display clusters selection proportions equal least cutoff. Must 0 1. Default 0 (case either clusters displayed, max_num_clusts , max_num_clusts specified). min_num_clusts Integer numeric; minimum number clusters use regardless cutoff. (, chosen cutoff returns fewer min_num_clusts clusters, cutoff increased least min_num_clusts clusters selected.) Default 1. max_num_clusts Integer numeric; maximum number clusters use regardless cutoff. (, chosen cutoff returns max_num_clusts clusters, cutoff decreased max_num_clusts clusters selected.) Default NA (case max_num_clusts ignored). ... Additional arguments generic print.data.frame function","code":""},{"path":"/reference/print.cssr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Print cluster stability selection output — print.cssr","text":"data.frame; row contains cluster, arranged decreasing order cluster selection proportion top bottom. columns ClustName (name cluster either provided css made css name provided); ClustProtoName (name selection prototype cluster, feature greatest individual selection proportion among cluster members, ties broken choosing feature highest correlation response response real-valued; returned features named), ClustProtoNum (column number prototype X matrix provided css), ClustSize (size cluster).","code":""},{"path":"/reference/print.cssr.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Print cluster stability selection output — print.cssr","text":"Gregory Faletto, Jacob Bien","code":""},{"path":"/reference/printCssDf.html","id":null,"dir":"Reference","previous_headings":"","what":"Prepares a data.frame summarazing cluster stability selection output to print — printCssDf","title":"Prepares a data.frame summarazing cluster stability selection output to print — printCssDf","text":"Print summary information css function.","code":""},{"path":"/reference/printCssDf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prepares a data.frame summarazing cluster stability selection output to print — printCssDf","text":"","code":"printCssDf(css_results, cutoff = 0, min_num_clusts = 1, max_num_clusts = NA)"},{"path":"/reference/printCssDf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prepares a data.frame summarazing cluster stability selection output to print — printCssDf","text":"css_results object class \"cssr\" (output function css). cutoff Numeric; outputted data.frame display clusters selection proportions equal least cutoff. Must 0 1. Default 0 (case either clusters displayed, max_num_clusts , max_num_clusts specified). min_num_clusts Integer numeric; minimum number clusters use regardless cutoff. (, chosen cutoff returns fewer min_num_clusts clusters, cutoff increased least min_num_clusts clusters selected.) Default 1. max_num_clusts Integer numeric; maximum number clusters use regardless cutoff. (, chosen cutoff returns max_num_clusts clusters, cutoff decreased max_num_clusts clusters selected.) Default NA (case max_num_clusts ignored).","code":""},{"path":"/reference/printCssDf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prepares a data.frame summarazing cluster stability selection output to print — printCssDf","text":"data.frame; row contains cluster, arranged decreasing order cluster selection proportion top bottom. columns ClustName (name cluster either provided css made css name provided); ClustProtoName (name selection prototype cluster, feature greatest individual selection proportion among cluster members, ties broken choosing feature highest correlation response response real-valued; returned features named), ClustProtoNum (column number prototype X matrix provided css), ClustSize (size cluster).","code":""},{"path":"/reference/printCssDf.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Prepares a data.frame summarazing cluster stability selection output to print — printCssDf","text":"Gregory Faletto, Jacob Bien","code":""},{"path":"/reference/processClusterLassoInputs.html","id":null,"dir":"Reference","previous_headings":"","what":"Check the inputs to protolasso and clusterRepLasso, format clusters, and\nidentify prototypes for each cluster — processClusterLassoInputs","title":"Check the inputs to protolasso and clusterRepLasso, format clusters, and\nidentify prototypes for each cluster — processClusterLassoInputs","text":"Check inputs protolasso clusterRepLasso, format clusters, identify prototypes cluster","code":""},{"path":"/reference/processClusterLassoInputs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check the inputs to protolasso and clusterRepLasso, format clusters, and\nidentify prototypes for each cluster — processClusterLassoInputs","text":"","code":"processClusterLassoInputs(X, y, clusters, nlambda)"},{"path":"/reference/processClusterLassoInputs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check the inputs to protolasso and clusterRepLasso, format clusters, and\nidentify prototypes for each cluster — processClusterLassoInputs","text":"X n x p numeric matrix (preferably) data.frame (coerced internally matrix function model.matrix) containing p >= 2 features/predictors y response; length n numeric (integer) real-valued vector. clusters list integer vectors; vector contain indices cluster features (subset 1:p). (one cluster, clusters can either list length 1 integer vector.) provided clusters must non-overlapping. Every feature appearing cluster assumed unclustered (, treated \"cluster\" containing ). Default list() (clusters specified). nlambda Integer; number lambda values use lasso fit protolasso. Default 100 (following default glmnet). now, nlambda must least 2 (using single lambda supported).","code":""},{"path":"/reference/processClusterLassoInputs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check the inputs to protolasso and clusterRepLasso, format clusters, and\nidentify prototypes for each cluster — processClusterLassoInputs","text":"list four elements. x provided X, converted matrix provided data.frame, column names removed. clusters named list entry integer vector indices features common cluster. (length list clusters equal number clusters.) identified clusters non-overlapping. features appear exactly one cluster (unclustered features put \"cluster\" size 1). prototypes integer vector whose length equal number clusters. Entry index feature belonging cluster highly correlated y (, prototype cluster, protolasso; see Reid Tibshirani 2016). var_names provided X matrix column names, names featurrs provided X matrix. names provided, feat_names NA.","code":""},{"path":"/reference/processClusterLassoInputs.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Check the inputs to protolasso and clusterRepLasso, format clusters, and\nidentify prototypes for each cluster — processClusterLassoInputs","text":"Reid, S., & Tibshirani, R. (2016). Sparse regression marginal testing using cluster prototypes. Biostatistics, 17(2), 364–376. https://doi.org/10.1093/biostatistics/kxv049.","code":""},{"path":"/reference/processClusterLassoInputs.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Check the inputs to protolasso and clusterRepLasso, format clusters, and\nidentify prototypes for each cluster — processClusterLassoInputs","text":"Gregory Faletto, Jacob Bien","code":""},{"path":"/reference/protolasso.html","id":null,"dir":"Reference","previous_headings":"","what":"Select features via the protolasso (Reid and Tibshirani 2016) — protolasso","title":"Select features via the protolasso (Reid and Tibshirani 2016) — protolasso","text":"Select features via protolasso (Reid Tibshirani 2016)","code":""},{"path":"/reference/protolasso.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Select features via the protolasso (Reid and Tibshirani 2016) — protolasso","text":"","code":"protolasso(X, y, clusters = list(), nlambda = 100)"},{"path":"/reference/protolasso.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Select features via the protolasso (Reid and Tibshirani 2016) — protolasso","text":"X n x p numeric matrix (preferably) data.frame (coerced internally matrix function model.matrix) containing p >= 2 features/predictors y response; length n numeric (integer) real-valued vector. clusters list integer vectors; vector contain indices cluster features (subset 1:p). (one cluster, clusters can either list length 1 integer vector.) provided clusters must non-overlapping. Every feature appearing cluster assumed unclustered (, treated \"cluster\" containing ). #' CAUTION: provided X data.frame contains categorical feature two levels, resulting matrix made model.matrix different number columns provided data.frame, feature numbers change, clusters argument work properly (current version package). get correct results case, please use model.matrix convert data.frame numeric matrix , provide matrix cluster assignments respect matrix. Default list() (clusters specified). nlambda Integer; number lambda values use lasso fit protolasso. Default 100 (following default glmnet). now, nlambda must least 2 (using single lambda supported).","code":""},{"path":"/reference/protolasso.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Select features via the protolasso (Reid and Tibshirani 2016) — protolasso","text":"list three elements. selected_sets list integer vectors. Entry k list contains selected set (integer vector) size k yielded protolasso (set size k selected, entry k empty.) selected_clusts_list list; element list named list selected clusters. (, selected set size k yielded protolasso, selected_clusts_list[k] named list length k, member list integer vector cluster members. particular, selected_clusts_lists[k][j] cluster contains feature selected_sets[k]j.) beta beta output glmnet lasso estimated matrix prototypes. (See documentation function glmnet glmnet package details.)","code":""},{"path":"/reference/protolasso.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Select features via the protolasso (Reid and Tibshirani 2016) — protolasso","text":"Reid, S., & Tibshirani, R. (2016). Sparse regression marginal testing using cluster prototypes. Biostatistics, 17(2), 364–376. https://doi.org/10.1093/biostatistics/kxv049.","code":""},{"path":"/reference/protolasso.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Select features via the protolasso (Reid and Tibshirani 2016) — protolasso","text":"Gregory Faletto, Jacob Bien","code":""}]
